{
  "{\"sourceRoot\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\test\\\\functional\\\\api\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"filename\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\test\\\\functional\\\\api\\\\usersTest.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\test\\functional\\api",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\test\\functional\\api\\usersTest.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\test\\functional\\api\\usersTest.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\test\\functional\\api\\usersTest.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\test\\functional\\api",
        "sourceFileName": "usersTest.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _chai = _interopRequireDefault(require(\"chai\"));\n\nvar request = require(\"supertest\");\n\nvar MongoMemoryServer = require(\"mongodb-memory-server\").MongoMemoryServer;\n\nvar User = require(\"../../../models/users\");\n\nvar mongoose = require(\"mongoose\");\n\nvar expect = _chai.default.expect;\n\nvar _ = require(\"lodash\");\n\nvar server = require(\"../../../bin/www\");\n\n;\nvar mongod;\nvar db, matchingCondition;\ndescribe('Customers', function () {\n  before(function (done) {\n    var username = 'qianwenzhangnancy';\n    var password = 'zqw123456';\n    var mongodburl = 'mongodb+srv://' + username + ':' + password + '@wit-qianwenzhang-cluster-yyg37.mongodb.net/taskmanagementdb';\n    mongoose.connect(mongodburl, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useFindAndModify: false\n    });\n    var db = mongoose.connection;\n    db.on('error', console.error.bind(console, 'connection error'));\n    db.once('open', function () {\n      console.log('Connected to database Successfully!');\n      done();\n    });\n  }); // before(async () => {\n  //     try {\n  //         mongod = new MongoMemoryServer({\n  //             instance: {\n  //                 port: 27017,\n  //                 dbPath: \"./test/database\",\n  //                 dbName: \"taskmanagementdb\" // by default generate random dbName\n  //             }\n  //         });\n  //         // Async Trick - this ensures the database is created before\n  //         // we try to connect to it or start the server\n  //         await mongod.getConnectionString();\n  //\n  //         mongoose.connect(\"mongodb://localhost:27017/taskmanagementdb\", {\n  //             useNewUrlParser: true,\n  //             useUnifiedTopology: true\n  //         });\n  //         db = mongoose.connection;\n  //     } catch (error) {\n  //         console.log(error);\n  //     }\n  // });\n  //\n  // after(async () => {\n  //     try {\n  //         await db.dropDatabase();\n  //     } catch (error) {\n  //         console.log(error);\n  //     }\n  // });\n\n  describe('DELETE /deleteUser/:id', function () {\n    describe(\"when the id is valid\", function () {\n      it('should return the successful message with valid input when deleting', function () {\n        return request(server).delete(\"/deleteUser/5dbf20746c524713ecedcc13\").expect({\n          message: 'User Successfully Deleted!'\n        });\n      });\n      after(function () {\n        return request(server).get(\"/allUsers\").expect(200).then(function (res) {\n          expect(res.body.length).equals(5);\n        });\n      });\n    });\n    describe(\"when the id is invalid\", function () {\n      it('should return message with invalid input when deleting', function () {\n        return request(server).delete(\"/deleteUser/1000\").expect(200).expect({\n          message: 'User NOT DELETED!'\n        });\n      });\n    });\n  });\n  describe('GET /allUsers', function () {\n    it('should return all the users', function (done) {\n      request(server).get('/allUsers').set(\"Accept\", \"application/json\").expect(\"Content-Type\", /json/).end(function (err, res) {\n        try {\n          expect(res.body).to.be.a(\"array\");\n          expect(res.body.length).to.equal(5);\n\n          var result = _.map(res.body, function (users) {\n            return {\n              userEmail: users.userEmail\n            };\n          });\n\n          expect(result).to.deep.include({\n            userEmail: \"qianwenzhangnancy@gmail.com\"\n          });\n          expect(result).to.deep.include({\n            userEmail: \"123456monica@gmail.com\"\n          });\n          expect(result).to.deep.include({\n            userEmail: \"lucyisgirl@gmail.com\"\n          });\n          expect(result).to.deep.include({\n            userEmail: \"ronaldoho@gmail.com\"\n          });\n          expect(result).to.deep.include({\n            userEmail: \"james@gmail.com\"\n          });\n          done();\n        } catch (e) {\n          done(e);\n        }\n      });\n    });\n  });\n  describe(\"GET /addFriend/:id\", function () {\n    describe(\"when there are related results\", function () {\n      it(\"should return the matching user\", function (done) {\n        request(server).get('/addFriend/444').set(\"Accept\", \"application/json\").expect(\"Content-Type\", /json/).expect(200).expect({\n          message: 'User has found! Do you want to send a request?'\n        }).end(function (err, res) {\n          try {\n            expect(res.body).to.be.a(\"object\");\n            expect(res.body.data.length).to.equal(2); // let result = _.map(res.body.data, users => {\n            //     return {userEmail: users.userEmail};\n            // });\n            // expect(res.body.data).to.include(\n            //     userName:\"44444o\",\n            //     userEmail: \"ronaldoho@gmail.com\"});\n            // expect(result).to.include({userEmail: \"james@gmail.com\"});\n\n            done();\n          } catch (e) {\n            done(e);\n          }\n        });\n      });\n    });\n    describe(\"when no results are related\", function () {\n      it(\"should return the NOT found message\", function (done) {\n        request(server).get(\"/addFriend/9999\").set(\"Accept\", \"application/json\").expect(\"Content-Type\", /json/).expect(200).end(function (err, res) {\n          expect(res.body.message).equals(\"USER NOT FOUND\");\n          done(err);\n        });\n      });\n    });\n  });\n  describe(\"GET /getCoinBalance/:id\", function () {\n    describe(\"get the coins when id is valid \", function () {\n      it(\"should return the coins that user has\", function (done) {\n        request(server).get(\"/getCoinBalance/5db5f1276df19224807d71db\").set(\"Accept\", \"application/json\").expect(\"Content-Type\", /json/).expect(200).end(function (err, res) {\n          expect(res.body.message).equals(\"your coins: { userCoins: 9000 }\");\n          done(err);\n        });\n      });\n    });\n    describe(\"return the information if id is invalid\", function () {\n      it('return the error', function (done) {\n        request(server).get(\"/getCoinBalance/1444444\").set(\"Accept\", \"application/json\").expect(\"Content-Type\", /json/).expect(200).end(function (err, res) {\n          expect(res.body.message).equals(\"ERROR\");\n          done(err);\n        });\n      });\n    });\n  });\n  describe('GET /getUser/:id', function () {\n    describe(\"get the user if id is valid \", function () {\n      it(\"should return the information of specific user\", function (done) {\n        request(server).get(\"/getUser/5db5f1276df19224807d71db\").set(\"Accept\", \"application/json\").expect(\"Content-Type\", /json/).expect(200).end(function (err, res) {\n          var result = _.map(res.body, function (users) {\n            return {\n              userEmail: users.userEmail\n            };\n          });\n\n          expect(result[0]).to.include({\n            userEmail: \"james@gmail.com\"\n          });\n          done();\n        });\n      });\n    });\n    describe(\"return the error information if id is invalid\", function () {\n      it('return the error information', function (done) {\n        request(server).get(\"/getUser/5db5f\").set(\"Accept\", \"application/json\").expect(\"Content-Type\", /json/).expect(200).end(function (err, res) {\n          expect(res.body.message).equals(\"USER NOT Found!\");\n          done(err);\n        });\n      });\n    });\n  });\n  describe('POST /user/register', function () {\n    describe('if the input userEmail is the only one', function () {\n      it('should return confirmation and update database ', function () {\n        var user = {\n          userName: \"Super Mario\",\n          userPassword: \"MarioJumpsHigh\",\n          userEmail: \"Marioooooooo123@gmail.com\",\n          userCoins: 10000\n        };\n        return request(server).post(\"/user/register\").send(user).expect(200).then(function (res) {\n          expect({\n            message: 'User has registered successfully'\n          });\n        });\n      });\n      after(function () {\n        return request(server).get(\"/addFriend/Super Mario\").expect(200).then(function (res) {\n          expect(res.body.data.length).equals(1);\n        });\n      });\n    });\n    describe('if the email has already be registerd', function () {\n      it('should return the error message', function () {\n        var user = {\n          userName: \"Super Mario\",\n          userPassword: \"MarioJumpsHigh\",\n          userEmail: \"Marioooooooo123@gmail.com\",\n          userCoins: 10000\n        };\n        return request(server).post(\"/user/register\").send(user).expect(200).then(function (res) {\n          expect({\n            message: 'user email already exists'\n          });\n        });\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "usersTest.js"
      ],
      "names": [
        "request",
        "require",
        "MongoMemoryServer",
        "User",
        "mongoose",
        "expect",
        "chai",
        "_",
        "server",
        "mongod",
        "db",
        "matchingCondition",
        "describe",
        "before",
        "done",
        "username",
        "password",
        "mongodburl",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "useFindAndModify",
        "connection",
        "on",
        "console",
        "error",
        "bind",
        "once",
        "log",
        "it",
        "delete",
        "message",
        "after",
        "get",
        "then",
        "res",
        "body",
        "length",
        "equals",
        "set",
        "end",
        "err",
        "to",
        "be",
        "a",
        "equal",
        "result",
        "map",
        "users",
        "userEmail",
        "deep",
        "include",
        "e",
        "data",
        "user",
        "userName",
        "userPassword",
        "userCoins",
        "post",
        "send"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\test\\functional\\api",
      "sourcesContent": [
        "const request = require(\"supertest\");\r\nconst MongoMemoryServer = require(\"mongodb-memory-server\").MongoMemoryServer;\r\nconst User = require(\"../../../models/users\");\r\nconst mongoose = require(\"mongoose\");\r\nimport chai from 'chai';\r\nvar expect = chai.expect;\r\nconst _ = require(\"lodash\");\r\n\r\nlet server = require(\"../../../bin/www\");;\r\nlet mongod;\r\nlet db, matchingCondition;\r\n\r\ndescribe('Customers',  () =>{\r\n    before(function (done) {\r\n        let username = 'qianwenzhangnancy';\r\n        let password = 'zqw123456';\r\n        let mongodburl = 'mongodb+srv://' + username + ':' + password + '@wit-qianwenzhang-cluster-yyg37.mongodb.net/taskmanagementdb';\r\n        mongoose.connect(mongodburl, {useNewUrlParser: true, useUnifiedTopology: true, useFindAndModify: false});\r\n\r\n        let db = mongoose.connection;\r\n        db.on('error', console.error.bind(console, 'connection error'));\r\n        db.once('open', function () {\r\n            console.log('Connected to database Successfully!');\r\n            done();\r\n        });\r\n    });\r\n    // before(async () => {\r\n    //     try {\r\n    //         mongod = new MongoMemoryServer({\r\n    //             instance: {\r\n    //                 port: 27017,\r\n    //                 dbPath: \"./test/database\",\r\n    //                 dbName: \"taskmanagementdb\" // by default generate random dbName\r\n    //             }\r\n    //         });\r\n    //         // Async Trick - this ensures the database is created before\r\n    //         // we try to connect to it or start the server\r\n    //         await mongod.getConnectionString();\r\n    //\r\n    //         mongoose.connect(\"mongodb://localhost:27017/taskmanagementdb\", {\r\n    //             useNewUrlParser: true,\r\n    //             useUnifiedTopology: true\r\n    //         });\r\n    //         db = mongoose.connection;\r\n    //     } catch (error) {\r\n    //         console.log(error);\r\n    //     }\r\n    // });\r\n    //\r\n    // after(async () => {\r\n    //     try {\r\n    //         await db.dropDatabase();\r\n    //     } catch (error) {\r\n    //         console.log(error);\r\n    //     }\r\n    // });\r\n    describe('DELETE /deleteUser/:id',() => {\r\n        describe(\"when the id is valid\",() => {\r\n            it('should return the successful message with valid input when deleting', () => {\r\n                return request(server)\r\n                    .delete(\"/deleteUser/5dbf20746c524713ecedcc13\")\r\n                    .expect({message: 'User Successfully Deleted!'});\r\n\r\n            });\r\n            after(() => {\r\n                return request(server)\r\n                    .get(\"/allUsers\")\r\n                    .expect(200)\r\n                    .then(res => {\r\n                        expect(res.body.length).equals(5);\r\n                    });\r\n            });\r\n        });\r\n        describe(\"when the id is invalid\",() => {\r\n            it('should return message with invalid input when deleting', () => {\r\n                return request(server)\r\n                    .delete(\"/deleteUser/1000\")\r\n                    .expect(200)\r\n                    .expect({message: 'User NOT DELETED!'});\r\n            });\r\n        });\r\n    });\r\n    describe('GET /allUsers',  () => {\r\n        it('should return all the users', done => {\r\n            request(server)\r\n                .get('/allUsers')\r\n                .set(\"Accept\", \"application/json\")\r\n                .expect(\"Content-Type\", /json/)\r\n                .end((err, res) => {\r\n                    try {\r\n                        expect(res.body).to.be.a(\"array\");\r\n                        expect(res.body.length).to.equal(5);\r\n\r\n                        let result = _.map(res.body, users => {\r\n                            return {userEmail: users.userEmail};\r\n                        });\r\n                        expect(result).to.deep.include({userEmail: \"qianwenzhangnancy@gmail.com\"});\r\n                        expect(result).to.deep.include({userEmail: \"123456monica@gmail.com\"});\r\n                        expect(result).to.deep.include({userEmail: \"lucyisgirl@gmail.com\"});\r\n                        expect(result).to.deep.include({userEmail: \"ronaldoho@gmail.com\"});\r\n                        expect(result).to.deep.include({userEmail: \"james@gmail.com\"});\r\n\r\n                        done();\r\n                    } catch(e){\r\n                        done(e)\r\n                    }\r\n                });\r\n        });\r\n    });\r\n\r\n    describe(\"GET /addFriend/:id\", () => {\r\n        describe(\"when there are related results\", () => {\r\n            it(\"should return the matching user\", done => {\r\n                request(server)\r\n                    .get('/addFriend/444')\r\n                    .set(\"Accept\", \"application/json\")\r\n                    .expect(\"Content-Type\", /json/)\r\n                    .expect(200)\r\n                    .expect({message: 'User has found! Do you want to send a request?'})\r\n                    .end((err, res) => {\r\n                        try {\r\n                            expect(res.body).to.be.a(\"object\");\r\n                            expect(res.body.data.length).to.equal(2);\r\n\r\n                            // let result = _.map(res.body.data, users => {\r\n                            //     return {userEmail: users.userEmail};\r\n                            // });\r\n\r\n                            // expect(res.body.data).to.include(\r\n                            //     userName:\"44444o\",\r\n                            //     userEmail: \"ronaldoho@gmail.com\"});\r\n                            // expect(result).to.include({userEmail: \"james@gmail.com\"});\r\n                            done();\r\n                        } catch (e) {\r\n                            done(e)\r\n                        }\r\n                    })\r\n            })\r\n        })\r\n        describe(\"when no results are related\", () => {\r\n            it(\"should return the NOT found message\", done => {\r\n                request(server)\r\n                    .get(\"/addFriend/9999\")\r\n                    .set(\"Accept\", \"application/json\")\r\n                    .expect(\"Content-Type\", /json/)\r\n                    .expect(200)\r\n                    .end((err, res) => {\r\n                        expect(res.body.message).equals(\"USER NOT FOUND\")\r\n                        done(err)\r\n                    })\r\n            })\r\n        })\r\n    })\r\n\r\n    describe(\"GET /getCoinBalance/:id\", () => {\r\n        describe(\"get the coins when id is valid \",() =>{\r\n            it(\"should return the coins that user has\", done =>{\r\n              request(server)\r\n                  .get(\"/getCoinBalance/5db5f1276df19224807d71db\")\r\n                  .set(\"Accept\", \"application/json\")\r\n                  .expect(\"Content-Type\", /json/)\r\n                  .expect(200)\r\n                  .end((err,res) => {\r\n                      expect(res.body.message).equals(\"your coins: { userCoins: 9000 }\");\r\n                      done(err);\r\n                })\r\n            })\r\n        })\r\n        describe(\"return the information if id is invalid\", () => {\r\n            it('return the error', done => {\r\n                request(server)\r\n                    .get(\"/getCoinBalance/1444444\")\r\n                    .set(\"Accept\", \"application/json\")\r\n                    .expect(\"Content-Type\", /json/)\r\n                    .expect(200)\r\n                    .end((err,res) => {\r\n                        expect(res.body.message).equals(\"ERROR\");\r\n                        done(err);\r\n                    })\r\n            })\r\n        });\r\n    })\r\n\r\n    describe('GET /getUser/:id', () => {\r\n        describe(\"get the user if id is valid \",() =>{\r\n            it(\"should return the information of specific user\", done =>{\r\n                request(server)\r\n                    .get(\"/getUser/5db5f1276df19224807d71db\")\r\n                    .set(\"Accept\", \"application/json\")\r\n                    .expect(\"Content-Type\", /json/)\r\n                    .expect(200)\r\n                    .end((err,res) => {\r\n                        let result = _.map(res.body, users => {\r\n                            return {userEmail: users.userEmail};\r\n                        })\r\n                        expect(result[0]).to.include({userEmail: \"james@gmail.com\"});\r\n                        done();\r\n                    })\r\n            })\r\n        })\r\n        describe(\"return the error information if id is invalid\", () => {\r\n            it('return the error information', done => {\r\n                request(server)\r\n                    .get(\"/getUser/5db5f\")\r\n                    .set(\"Accept\", \"application/json\")\r\n                    .expect(\"Content-Type\", /json/)\r\n                    .expect(200)\r\n                    .end((err,res) => {\r\n                        expect(res.body.message).equals(\"USER NOT Found!\");\r\n                        done(err);\r\n                    })\r\n            })\r\n        });\r\n    })\r\n\r\n    describe('POST /user/register', () => {\r\n        describe('if the input userEmail is the only one', () =>{\r\n            it('should return confirmation and update database ', () => {\r\n                const user = {\r\n                    userName: \"Super Mario\",\r\n                    userPassword: \"MarioJumpsHigh\",\r\n                    userEmail: \"Marioooooooo123@gmail.com\",\r\n                    userCoins: 10000\r\n                };\r\n                return request(server)\r\n                    .post(\"/user/register\")\r\n                    .send(user)\r\n                    .expect(200)\r\n                    .then(res => {\r\n                        expect({message: 'User has registered successfully'});\r\n                    })\r\n            });\r\n\r\n            after(() => {\r\n                return request(server)\r\n                    .get(\"/addFriend/Super Mario\")\r\n                    .expect(200)\r\n                    .then(res => {\r\n                        expect(res.body.data.length).equals(1);\r\n                    });\r\n            });\r\n        })\r\n\r\n        describe('if the email has already be registerd', () => {\r\n            it('should return the error message', () => {\r\n                const user = {\r\n                    userName: \"Super Mario\",\r\n                    userPassword: \"MarioJumpsHigh\",\r\n                    userEmail: \"Marioooooooo123@gmail.com\",\r\n                    userCoins: 10000\r\n                };\r\n\r\n                return request(server)\r\n                    .post(\"/user/register\")\r\n                    .send(user)\r\n                    .expect(200)\r\n                    .then(res => {\r\n                        expect({message: 'user email already exists'});\r\n                    })\r\n            })\r\n        })\r\n    })\r\n\r\n\r\n\r\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1572932431818
  },
  "{\"sourceRoot\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"filename\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\models\\\\users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\models\\users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\models\\users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\models\\users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\models",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar UserSchema = new mongoose.Schema({\n  userName: String,\n  userPassword: String,\n  userEmail: String,\n  userCoins: {\n    type: Number,\n    default: 0\n  },\n  tree: [{\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'trees'\n  }],\n  records: [{\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'plantingRecord'\n  }]\n}, {\n  collection: 'users'\n});\nmodule.exports = mongoose.model('Users', UserSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlVzZXJTY2hlbWEiLCJTY2hlbWEiLCJ1c2VyTmFtZSIsIlN0cmluZyIsInVzZXJQYXNzd29yZCIsInVzZXJFbWFpbCIsInVzZXJDb2lucyIsInR5cGUiLCJOdW1iZXIiLCJkZWZhdWx0IiwidHJlZSIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJyZWNvcmRzIiwiY29sbGVjdGlvbiIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUVBLElBQUlDLFVBQVUsR0FBRyxJQUFJRixRQUFRLENBQUNHLE1BQWIsQ0FDYjtBQUNJQyxFQUFBQSxRQUFRLEVBQUVDLE1BRGQ7QUFFSUMsRUFBQUEsWUFBWSxFQUFFRCxNQUZsQjtBQUdJRSxFQUFBQSxTQUFTLEVBQUVGLE1BSGY7QUFJSUcsRUFBQUEsU0FBUyxFQUFFO0FBQUNDLElBQUFBLElBQUksRUFBRUMsTUFBUDtBQUFlQyxJQUFBQSxPQUFPLEVBQUU7QUFBeEIsR0FKZjtBQUtJQyxFQUFBQSxJQUFJLEVBQUMsQ0FBQztBQUNGSCxJQUFBQSxJQUFJLEVBQUNULFFBQVEsQ0FBQ0csTUFBVCxDQUFnQlUsS0FBaEIsQ0FBc0JDLFFBRHpCO0FBRUZDLElBQUFBLEdBQUcsRUFBQztBQUZGLEdBQUQsQ0FMVDtBQVNJQyxFQUFBQSxPQUFPLEVBQUMsQ0FBQztBQUNMUCxJQUFBQSxJQUFJLEVBQUNULFFBQVEsQ0FBQ0csTUFBVCxDQUFnQlUsS0FBaEIsQ0FBc0JDLFFBRHRCO0FBRUxDLElBQUFBLEdBQUcsRUFBQztBQUZDLEdBQUQ7QUFUWixDQURhLEVBZWI7QUFDSUUsRUFBQUEsVUFBVSxFQUFDO0FBRGYsQ0FmYSxDQUFqQjtBQW1CQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCbkIsUUFBUSxDQUFDb0IsS0FBVCxDQUFlLE9BQWYsRUFBd0JsQixVQUF4QixDQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcNHRoWWVhcl8xc3RTZW1cXFdlYkRldmVsb3BtZW50XFx0YXNrTWFuYWdlbWVudF9Rd1pcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImxldCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcblxyXG5sZXQgVXNlclNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoXHJcbiAgICB7XHJcbiAgICAgICAgdXNlck5hbWU6IFN0cmluZyxcclxuICAgICAgICB1c2VyUGFzc3dvcmQ6IFN0cmluZyxcclxuICAgICAgICB1c2VyRW1haWw6IFN0cmluZyxcclxuICAgICAgICB1c2VyQ29pbnM6IHt0eXBlOiBOdW1iZXIsIGRlZmF1bHQ6IDB9LFxyXG4gICAgICAgIHRyZWU6W3tcclxuICAgICAgICAgICAgdHlwZTptb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcbiAgICAgICAgICAgIHJlZjondHJlZXMnXHJcbiAgICAgICAgfV0sXHJcbiAgICAgICAgcmVjb3Jkczpbe1xyXG4gICAgICAgICAgICB0eXBlOm1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuICAgICAgICAgICAgcmVmOidwbGFudGluZ1JlY29yZCdcclxuICAgICAgICB9XVxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBjb2xsZWN0aW9uOid1c2VycydcclxuICAgIH0pO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBtb25nb29zZS5tb2RlbCgnVXNlcnMnLCBVc2VyU2NoZW1hKTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "mongoose",
        "require",
        "UserSchema",
        "Schema",
        "userName",
        "String",
        "userPassword",
        "userEmail",
        "userCoins",
        "type",
        "Number",
        "default",
        "tree",
        "Types",
        "ObjectId",
        "ref",
        "records",
        "collection",
        "module",
        "exports",
        "model"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,UAAU,GAAG,IAAIF,QAAQ,CAACG,MAAb,CACb;AACIC,EAAAA,QAAQ,EAAEC,MADd;AAEIC,EAAAA,YAAY,EAAED,MAFlB;AAGIE,EAAAA,SAAS,EAAEF,MAHf;AAIIG,EAAAA,SAAS,EAAE;AAACC,IAAAA,IAAI,EAAEC,MAAP;AAAeC,IAAAA,OAAO,EAAE;AAAxB,GAJf;AAKIC,EAAAA,IAAI,EAAC,CAAC;AACFH,IAAAA,IAAI,EAACT,QAAQ,CAACG,MAAT,CAAgBU,KAAhB,CAAsBC,QADzB;AAEFC,IAAAA,GAAG,EAAC;AAFF,GAAD,CALT;AASIC,EAAAA,OAAO,EAAC,CAAC;AACLP,IAAAA,IAAI,EAACT,QAAQ,CAACG,MAAT,CAAgBU,KAAhB,CAAsBC,QADtB;AAELC,IAAAA,GAAG,EAAC;AAFC,GAAD;AATZ,CADa,EAeb;AACIE,EAAAA,UAAU,EAAC;AADf,CAfa,CAAjB;AAmBAC,MAAM,CAACC,OAAP,GAAiBnB,QAAQ,CAACoB,KAAT,CAAe,OAAf,EAAwBlB,UAAxB,CAAjB",
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\models",
      "sourcesContent": [
        "let mongoose = require('mongoose');\r\n\r\nlet UserSchema = new mongoose.Schema(\r\n    {\r\n        userName: String,\r\n        userPassword: String,\r\n        userEmail: String,\r\n        userCoins: {type: Number, default: 0},\r\n        tree:[{\r\n            type:mongoose.Schema.Types.ObjectId,\r\n            ref:'trees'\r\n        }],\r\n        records:[{\r\n            type:mongoose.Schema.Types.ObjectId,\r\n            ref:'plantingRecord'\r\n        }]\r\n    },\r\n    {\r\n        collection:'users'\r\n    });\r\n\r\nmodule.exports = mongoose.model('Users', UserSchema);\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572865172797
  },
  "{\"sourceRoot\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"filename\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar createError = require('http-errors');\n\nvar express = require('express');\n\nvar path = require('path');\n\nvar cookieParser = require('cookie-parser');\n\nvar logger = require('morgan');\n\nvar indexRouter = require('./routes/index');\n\nvar usersRouter = require('./routes/users');\n\nvar users = require(\"./routes/users\");\n\nvar trees = require(\"./routes/trees\");\n\nvar records = require(\"./routes/plantingRecords\");\n\nvar tags = require(\"./routes/tags\");\n\nvar app = express(); // view engine setup\n\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'ejs');\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: false\n}));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\napp.use('/', indexRouter);\napp.use('/users', usersRouter);\napp.get('/addFriend/:id', users.findOne); //√\n\napp.get('/getCoinBalance/:id', users.getCoins); //√\n//administrator function\n\napp.get('/allUsers', users.getUsers); //√\n//show all the trees in store\n\napp.get('/plantList', trees.findAllPlants); //√\n//check one of the users details,also for administrator\n\napp.get('/getUser/:id', users.checkOne); //√\n//show all focus time\n// app.get('/totalFocusTime/:id',records.totalFocusTime);\n// app.get('/plantingRecords/:id', records.findRecordsOfUser);\n\napp.delete('/deleteUser/:id', users.deleteUser); //√\n\napp.delete('/deleteRecord/:id', records.deleteRecord);\napp.delete('/deleteTag/:id', tags.deleteTag);\napp.put('/deleteTree/:id', users.deleteTree);\napp.put('/buyTree/:id', users.putTree);\napp.put('/tagEdition/:id', tags.editTag);\napp.post('/tagCreation', tags.addTag);\napp.post('/user/register', users.addUser); //√\n\napp.post('/addTree', trees.addTree); // catch 404 and forward to error handler\n\napp.use(function (req, res, next) {\n  next(createError(404));\n}); // error handler\n\napp.use(function (err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {}; // render the error page\n\n  res.status(err.status || 500);\n  res.render('error');\n});\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJjcmVhdGVFcnJvciIsInJlcXVpcmUiLCJleHByZXNzIiwicGF0aCIsImNvb2tpZVBhcnNlciIsImxvZ2dlciIsImluZGV4Um91dGVyIiwidXNlcnNSb3V0ZXIiLCJ1c2VycyIsInRyZWVzIiwicmVjb3JkcyIsInRhZ3MiLCJhcHAiLCJzZXQiLCJqb2luIiwiX19kaXJuYW1lIiwidXNlIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsInN0YXRpYyIsImdldCIsImZpbmRPbmUiLCJnZXRDb2lucyIsImdldFVzZXJzIiwiZmluZEFsbFBsYW50cyIsImNoZWNrT25lIiwiZGVsZXRlIiwiZGVsZXRlVXNlciIsImRlbGV0ZVJlY29yZCIsImRlbGV0ZVRhZyIsInB1dCIsImRlbGV0ZVRyZWUiLCJwdXRUcmVlIiwiZWRpdFRhZyIsInBvc3QiLCJhZGRUYWciLCJhZGRVc2VyIiwiYWRkVHJlZSIsInJlcSIsInJlcyIsIm5leHQiLCJlcnIiLCJsb2NhbHMiLCJtZXNzYWdlIiwiZXJyb3IiLCJzdGF0dXMiLCJyZW5kZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFdBQVcsR0FBR0MsT0FBTyxDQUFDLGFBQUQsQ0FBekI7O0FBQ0EsSUFBSUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFDQSxJQUFJRSxJQUFJLEdBQUdGLE9BQU8sQ0FBQyxNQUFELENBQWxCOztBQUNBLElBQUlHLFlBQVksR0FBR0gsT0FBTyxDQUFDLGVBQUQsQ0FBMUI7O0FBQ0EsSUFBSUksTUFBTSxHQUFHSixPQUFPLENBQUMsUUFBRCxDQUFwQjs7QUFFQSxJQUFJSyxXQUFXLEdBQUdMLE9BQU8sQ0FBQyxnQkFBRCxDQUF6Qjs7QUFDQSxJQUFJTSxXQUFXLEdBQUdOLE9BQU8sQ0FBQyxnQkFBRCxDQUF6Qjs7QUFFQSxJQUFNTyxLQUFLLEdBQUdQLE9BQU8sQ0FBQyxnQkFBRCxDQUFyQjs7QUFDQSxJ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LEdBQUosQ0FBUSxVQUFTMEIsR0FBVCxFQUFjSCxHQUFkLEVBQW1CQyxHQUFuQixFQUF3QkMsSUFBeEIsRUFBOEI7QUFDcEM7QUFDQUQsRUFBQUEsR0FBRyxDQUFDRyxNQUFKLENBQVdDLE9BQVgsR0FBcUJGLEdBQUcsQ0FBQ0UsT0FBekI7QUFDQUosRUFBQUEsR0FBRyxDQUFDRyxNQUFKLENBQVdFLEtBQVgsR0FBbUJOLEdBQUcsQ0FBQzNCLEdBQUosQ0FBUVMsR0FBUixDQUFZLEtBQVosTUFBdUIsYUFBdkIsR0FBdUNxQixHQUF2QyxHQUE2QyxFQUFoRSxDQUhvQyxDQUtwQzs7QUFDQUYsRUFBQUEsR0FBRyxDQUFDTSxNQUFKLENBQVdKLEdBQUcsQ0FBQ0ksTUFBSixJQUFjLEdBQXpCO0FBQ0FOLEVBQUFBLEdBQUcsQ0FBQ08sTUFBSixDQUFXLE9BQVg7QUFDRCxDQVJEO0FBVUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnJDLEdBQWpCIiwic291cmNlUm9vdCI6IkQ6XFw0dGhZZWFyXzFzdFNlbVxcV2ViRGV2ZWxvcG1lbnRcXHRhc2tNYW5hZ2VtZW50X1F3WiIsInNvdXJjZXNDb250ZW50IjpbInZhciBjcmVhdGVFcnJvciA9IHJlcXVpcmUoJ2h0dHAtZXJyb3JzJyk7XHJcbnZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG52YXIgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcclxudmFyIGNvb2tpZVBhcnNlciA9IHJlcXVpcmUoJ2Nvb2tpZS1wYXJzZXInKTtcclxudmFyIGxvZ2dlciA9IHJlcXVpcmUoJ21vcmdhbicpO1xyXG5cclxudmFyIGluZGV4Um91dGVyID0gcmVxdWlyZSgnLi9yb3V0ZXMvaW5kZXgnKTtcclxudmFyIHVzZXJzUm91dGVyID0gcmVxdWlyZSgnLi9yb3V0ZXMvdXNlcnMnKTtcclxuXHJcbmNvbnN0IHVzZXJzID0gcmVxdWlyZShcIi4vcm91dGVzL3VzZXJzXCIpO1xyXG5jb25zdCB0cmVlcyA9IHJlcXVpcmUoXCIuL3JvdXRlcy90cmVlc1wiKTtcclxuY29uc3QgcmVjb3JkcyA9IHJlcXVpcmUoXCIuL3JvdXRlcy9wbGFudGluZ1JlY29yZHNcIik7XHJcbmNvbnN0IHRhZ3MgPSByZXF1aXJlKFwiLi9yb3V0ZXMvdGFnc1wiKTtcclxudmFyIGFwcCA9IGV4cHJlc3MoKTtcclxuXHJcbi8vIHZpZXcgZW5naW5lIHNldHVwXHJcbmFwcC5zZXQoJ3ZpZXdzJywgcGF0aC5qb2luKF9fZGlybmFtZSwgJ3ZpZXdzJykpO1xyXG5hcHAuc2V0KCd2aWV3IGVuZ2luZScsICdlanMnKTtcclxuXHJcbmFwcC51c2UobG9nZ2VyKCdkZXYnKSk7XHJcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xyXG5hcHAudXNlKGV4cHJlc3MudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSk7XHJcbmFwcC51c2UoY29va2llUGFyc2VyKCkpO1xyXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICdwdWJsaWMnKSkpO1xyXG5cclxuYXBwLnVzZSgnLycsIGluZGV4Um91dGVyKTtcclxuYXBwLnVzZSgnL3VzZXJzJywgdXNlcnNSb3V0ZXIpO1xyXG5cclxuXHJcbmFwcC5nZXQoJy9hZGRGcmllbmQvOmlkJywgdXNlcnMuZmluZE9uZSk7ICAgICAgICAvL+KImlxyXG5hcHAuZ2V0KCcvZ2V0Q29pbkJhbGFuY2UvOmlkJyx1c2Vycy5nZXRDb2lucyk7ICAgLy/iiJpcclxuLy9hZG1pbmlzdHJhdG9yIGZ1bmN0aW9uXHJcbmFwcC5nZXQoJy9hbGxVc2VycycsdXNlcnMuZ2V0VXNlcnMpOyAgICAgICAgICAgICAvL+KImlxyXG4vL3Nob3cgYWxsIHRoZSB0cmVlcyBpbiBzdG9yZVxyXG5hcHAuZ2V0KCcvcGxhbnRMaXN0JywgdHJlZXMuZmluZEFsbFBsYW50cyk7ICAgICAgLy/iiJpcclxuLy9jaGVjayBvbmUgb2YgdGhlIHVzZXJzIGRldGFpbHMsYWxzbyBmb3IgYWRtaW5pc3RyYXRvclxyXG5hcHAuZ2V0KCcvZ2V0VXNlci86aWQnLHVzZXJzLmNoZWNrT25lKTsgICAgICAgICAgLy/iiJpcclxuLy9zaG93IGFsbCBmb2N1cyB0aW1lXHJcbi8vIGFwcC5nZXQoJy90b3RhbEZvY3VzVGltZS86aWQnLHJlY29yZHMudG90YWxGb2N1c1RpbWUpO1xyXG4vLyBhcHAuZ2V0KCcvcGxhbnRpbmdSZWNvcmRzLzppZCcsIHJlY29yZHMuZmluZFJlY29yZHNPZlVzZXIpO1xyXG5hcHAuZGVsZXRlKCcvZGVsZXRlVXNlci86aWQnLHVzZXJzLmRlbGV0ZVVzZXIpOyAgICAvL+KImlxyXG5hcHAuZGVsZXRlKCcvZGVsZXRlUmVjb3JkLzppZCcscmVjb3Jkcy5kZWxldGVSZWNvcmQpO1xyXG5hcHAuZGVsZXRlKCcvZGVsZXRlVGFnLzppZCcsdGFncy5kZWxldGVUYWcpO1xyXG5hcHAucHV0KCcvZGVsZXRlVHJlZS86aWQnLHVzZXJzLmRlbGV0ZVRyZWUpO1xyXG5hcHAucHV0KCcvYnV5VHJlZS86aWQnLHVzZXJzLnB1dFRyZWUpO1xyXG5hcHAucHV0KCcvdGFnRWRpdGlvbi86aWQnLCB0YWdzLmVkaXRUYWcpO1xyXG5hcHAucG9zdCgnL3RhZ0NyZWF0aW9uJywgdGFncy5hZGRUYWcpO1xyXG5hcHAucG9zdCgnL3VzZXIvcmVnaXN0ZXInLCB1c2Vycy5hZGRVc2VyKTsgICAgICAgICAgLy/iiJpcclxuYXBwLnBvc3QoJy9hZGRUcmVlJyx0cmVlcy5hZGRUcmVlKTtcclxuXHJcblxyXG4vLyBjYXRjaCA0MDQgYW5kIGZvcndhcmQgdG8gZXJyb3IgaGFuZGxlclxyXG5hcHAudXNlKGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XHJcbiAgbmV4dChjcmVhdGVFcnJvcig0MDQpKTtcclxufSk7XHJcblxyXG5cclxuXHJcbi8vIGVycm9yIGhhbmRsZXJcclxuYXBwLnVzZShmdW5jdGlvbihlcnIsIHJlcSwgcmVzLCBuZXh0KSB7XHJcbiAgLy8gc2V0IGxvY2Fscywgb25seSBwcm92aWRpbmcgZXJyb3IgaW4gZGV2ZWxvcG1lbnRcclxuICByZXMubG9jYWxzLm1lc3NhZ2UgPSBlcnIubWVzc2FnZTtcclxuICByZXMubG9jYWxzLmVycm9yID0gcmVxLmFwcC5nZXQoJ2VudicpID09PSAnZGV2ZWxvcG1lbnQnID8gZXJyIDoge307XHJcblxyXG4gIC8vIHJlbmRlciB0aGUgZXJyb3IgcGFnZVxyXG4gIHJlcy5zdGF0dXMoZXJyLnN0YXR1cyB8fCA1MDApO1xyXG4gIHJlcy5yZW5kZXIoJ2Vycm9yJyk7XHJcbn0pO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBhcHA7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "createError",
        "require",
        "express",
        "path",
        "cookieParser",
        "logger",
        "indexRouter",
        "usersRouter",
        "users",
        "trees",
        "records",
        "tags",
        "app",
        "set",
        "join",
        "__dirname",
        "use",
        "json",
        "urlencoded",
        "extended",
        "static",
        "get",
        "findOne",
        "getCoins",
        "getUsers",
        "findAllPlants",
        "checkOne",
        "delete",
        "deleteUser",
        "deleteRecord",
        "deleteTag",
        "put",
        "deleteTree",
        "putTree",
        "editTag",
        "post",
        "addTag",
        "addUser",
        "addTree",
        "req",
        "res",
        "next",
        "err",
        "locals",
        "message",
        "error",
        "status",
        "render",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "sourcesContent": [
        "var createError = require('http-errors');\r\nvar express = require('express');\r\nvar path = require('path');\r\nvar cookieParser = require('cookie-parser');\r\nvar logger = require('morgan');\r\n\r\nvar indexRouter = require('./routes/index');\r\nvar usersRouter = require('./routes/users');\r\n\r\nconst users = require(\"./routes/users\");\r\nconst trees = require(\"./routes/trees\");\r\nconst records = require(\"./routes/plantingRecords\");\r\nconst tags = require(\"./routes/tags\");\r\nvar app = express();\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'ejs');\r\n\r\napp.use(logger('dev'));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\napp.use('/', indexRouter);\r\napp.use('/users', usersRouter);\r\n\r\n\r\napp.get('/addFriend/:id', users.findOne);        //√\r\napp.get('/getCoinBalance/:id',users.getCoins);   //√\r\n//administrator function\r\napp.get('/allUsers',users.getUsers);             //√\r\n//show all the trees in store\r\napp.get('/plantList', trees.findAllPlants);      //√\r\n//check one of the users details,also for administrator\r\napp.get('/getUser/:id',users.checkOne);          //√\r\n//show all focus time\r\n// app.get('/totalFocusTime/:id',records.totalFocusTime);\r\n// app.get('/plantingRecords/:id', records.findRecordsOfUser);\r\napp.delete('/deleteUser/:id',users.deleteUser);    //√\r\napp.delete('/deleteRecord/:id',records.deleteRecord);\r\napp.delete('/deleteTag/:id',tags.deleteTag);\r\napp.put('/deleteTree/:id',users.deleteTree);\r\napp.put('/buyTree/:id',users.putTree);\r\napp.put('/tagEdition/:id', tags.editTag);\r\napp.post('/tagCreation', tags.addTag);\r\napp.post('/user/register', users.addUser);          //√\r\napp.post('/addTree',trees.addTree);\r\n\r\n\r\n// catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n  next(createError(404));\r\n});\r\n\r\n\r\n\r\n// error handler\r\napp.use(function(err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // render the error page\r\n  res.status(err.status || 500);\r\n  res.render('error');\r\n});\r\n\r\nmodule.exports = app;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572931990082
  },
  "{\"sourceRoot\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\routes\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"filename\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\routes\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar router = express.Router();\n/* GET home page. */\n\nrouter.get('/', function (req, res, next) {\n  res.render('index', {\n    title: 'Qianwen Zhang Assignment1'\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwibmV4dCIsInJlbmRlciIsInRpdGxlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXJCOztBQUNBLElBQUlDLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWI7QUFFQTs7QUFDQUQsTUFBTSxDQUFDRSxHQUFQLENBQVcsR0FBWCxFQUFnQixVQUFTQyxHQUFULEVBQWNDLEdBQWQsRUFBbUJDLElBQW5CLEVBQXlCO0FBQ3ZDRCxFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyxPQUFYLEVBQW9CO0FBQUVDLElBQUFBLEtBQUssRUFBRTtBQUFULEdBQXBCO0FBQ0QsQ0FGRDtBQUlBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJULE1BQWpCIiwic291cmNlUm9vdCI6IkQ6XFw0dGhZZWFyXzFzdFNlbVxcV2ViRGV2ZWxvcG1lbnRcXHRhc2tNYW5hZ2VtZW50X1F3Wlxccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG52YXIgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuLyogR0VUIGhvbWUgcGFnZS4gKi9cbnJvdXRlci5nZXQoJy8nLCBmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuICByZXMucmVuZGVyKCdpbmRleCcsIHsgdGl0bGU6ICdRaWFud2VuIFpoYW5nIEFzc2lnbm1lbnQxJyB9KTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "next",
        "render",
        "title",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;AAEA;;AACAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACvCD,EAAAA,GAAG,CAACE,MAAJ,CAAW,OAAX,EAAoB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAApB;AACD,CAFD;AAIAC,MAAM,CAACC,OAAP,GAAiBT,MAAjB",
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes",
      "sourcesContent": [
        "var express = require('express');\nvar router = express.Router();\n\n/* GET home page. */\nrouter.get('/', function(req, res, next) {\n  res.render('index', { title: 'Qianwen Zhang Assignment1' });\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572102488202
  },
  "{\"sourceRoot\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\routes\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"filename\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\routes\\\\users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes\\users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes\\users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes\\users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n// var mongodbUri = 'mongodb+srv://qianwenzhangnancy:zqw123456@wit-qianwenzhang-cluster-yyg37.mongodb.net/taskmanagement';\n// var mongodbUri = 'mongodb+srv://qianwenzhangnancy:zqw123456@wit-qianwenzhang-cluster-yyg37.mongodb.net/taskmanagementdb?';\n// let mongoose = require('mongoose');\n// mongoose.connect(mongodbUri);\n//\n// let db = mongoose.connection;\n// db.on('error',function (err) {\n//   console.log('Unable to Connect to  [' + db.name + ']',err);\n// });\n// db.once('open',function () {\n//   console.log('Successfully Connected to  [' + db.name + ']');\n// });\nvar User = require('../models/users');\n\nvar Tree = require('../models/trees');\n\nvar express = require('express');\n\nvar router = express.Router();\n\nrouter.getUsers = function (req, res) {\n  res.setHeader('Content-Type', 'application/json');\n  User.find(function (err, users) {\n    if (err) res.send(err);\n    res.send(JSON.stringify(users, null, 5));\n  });\n};\n\nrouter.checkOne = function (req, res) {\n  res.setHeader('Content-Type', 'application/json');\n  User.find({\n    \"_id\": req.params.id\n  }, function (err, donation) {\n    if (err) res.json({\n      message: 'USER NOT Found!',\n      errmsg: err\n    });else res.send(JSON.stringify(donation, null, 5));\n  });\n};\n\nrouter.findOne = function (req, res) {\n  res.setHeader('Content-Type', 'application/json');\n  var query = req.params.id;\n  var queryString = query.toString();\n  User.find({\n    \"userName\": {\n      $regex: queryString\n    }\n  }, function (err, user) {\n    if (err) res.json({\n      message: 'USER NOT FOUND',\n      errmsg: err\n    });else {\n      // res.send(user[userName]);\n      if (user.length == 0) res.json({\n        message: 'USER NOT FOUND'\n      }); // if(user != null)\n      else res.json({\n          message: 'User has found! Do you want to send a request?',\n          data: user\n        });\n    }\n  });\n};\n\nrouter.addUser = function (req, res) {\n  res.setHeader('Content-Type', 'application/json');\n  var user = new User(); //verify whether the userName and userEmail have existed or not\n\n  User.findOne({\n    userEmail: req.body.userEmail\n  }, function (err, user) {\n    if (err) {\n      res.json({\n        message: 'ERROR',\n        errmsg: err\n      });\n    } else {\n      // if(user.userName != null)\n      if (user != null && user.userEmail == req.body.userEmail) res.json({\n        message: 'user email already exists'\n      });else {\n        var user1 = new User();\n        user1.userName = req.body.userName;\n        user1.userEmail = req.body.userEmail;\n        user1.userPassword = req.body.userPassword;\n        user1.save(function (err) {\n          if (err) res.json({\n            message: 'ERROR',\n            errmsg: err\n          });else res.json({\n            message: 'User has registered successfully',\n            data: user1\n          });\n        });\n      }\n    }\n  });\n};\n\nrouter.getCoins = function (req, res) {\n  res.setHeader('Content-Type', 'application/json');\n  User.findById({\n    \"_id\": req.params.id\n  }, {\n    \"_id\": 0,\n    \"userCoins\": 1\n  }, function (err, user) {\n    if (err) res.json({\n      message: 'ERROR',\n      errmsg: err\n    });else {\n      user.save(function (err) {\n        if (err) res.json({\n          message: 'ERROR'\n        });else res.json({\n          message: 'your coins: ' + user.toString()\n        });\n      });\n    }\n  });\n};\n\nrouter.deleteUser = function (req, res) {\n  User.findByIdAndRemove(req.params.id, function (err) {\n    if (err) res.json({\n      message: 'User NOT DELETED!'\n    });else res.json({\n      message: 'User Successfully Deleted!'\n    });\n  });\n};\n\nrouter.putTree = function (req, res) {\n  res.setHeader('Content-Type', 'application/json');\n  User.findById(req.params.id, function (err, user) {\n    if (err) res.json({\n      message: 'USER not Found!',\n      errmsg: err\n    });else {\n      if (user.userCoins < 500) {\n        res.json({\n          message: 'Sorry, you do not have enough money!'\n        });\n      } else {\n        var count = user.tree.length;\n        user.tree[count] = req.body._id;\n        user.markModified('tree');\n        user.userCoins -= 500;\n        user.save(function (err) {\n          if (err) res.json({\n            message: 'Error',\n            errmsg: err\n          }); // user.tree.push(req.body._id);\n\n          res.json({\n            message: 'Tree Successfully Bought!',\n            data: user\n          });\n        });\n      }\n    }\n  });\n};\n\nrouter.deleteTree = function (req, res) {\n  res.setHeader('Content-Type', 'application/json');\n  User.findById(req.params.id, function (err, user) {\n    if (err) res.json({\n      message: 'USER not Found!',\n      errmsg: err\n    });else {\n      for (var i = 0; i < user.tree.length; i++) {\n        var count = 0;\n\n        if (user.tree[i] == req.body._id) {\n          count = i;\n          user.tree.splice(i, 1);\n          user.markModified('tree');\n          user.userCoins += 300;\n          user.save(function (err) {\n            if (err) res.json({\n              message: 'Tree cannot be deleted',\n              errmsg: err\n            });\n            res.json({\n              message: 'Tree Successfully Deleted!',\n              data: user\n            });\n          });\n        }\n\n        if (i == user.tree.length - 1 && count == 0) res.json({\n          message: 'You have not bought this tree!',\n          errmsg: err\n        });\n      }\n    }\n  });\n};\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "User",
        "require",
        "Tree",
        "express",
        "router",
        "Router",
        "getUsers",
        "req",
        "res",
        "setHeader",
        "find",
        "err",
        "users",
        "send",
        "JSON",
        "stringify",
        "checkOne",
        "params",
        "id",
        "donation",
        "json",
        "message",
        "errmsg",
        "findOne",
        "query",
        "queryString",
        "toString",
        "$regex",
        "user",
        "length",
        "data",
        "addUser",
        "userEmail",
        "body",
        "user1",
        "userName",
        "userPassword",
        "save",
        "getCoins",
        "findById",
        "deleteUser",
        "findByIdAndRemove",
        "putTree",
        "userCoins",
        "count",
        "tree",
        "_id",
        "markModified",
        "deleteTree",
        "i",
        "splice",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,iBAAD,CAAlB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,iBAAD,CAAlB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIG,MAAM,GAAGD,OAAO,CAACE,MAAR,EAAb;;AAEAD,MAAM,CAACE,QAAP,GAAkB,UAACC,GAAD,EAAKC,GAAL,EAAa;AAC3BA,EAAAA,GAAG,CAACC,SAAJ,CAAc,cAAd,EAA8B,kBAA9B;AACAT,EAAAA,IAAI,CAACU,IAAL,CAAU,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AAC5B,QAAGD,GAAH,EACIH,GAAG,CAACK,IAAJ,CAASF,GAAT;AACJH,IAAAA,GAAG,CAACK,IAAJ,CAASC,IAAI,CAACC,SAAL,CAAeH,KAAf,EAAqB,IAArB,EAA0B,CAA1B,CAAT;AACH,GAJD;AAKH,CAPD;;AASAR,MAAM,CAACY,QAAP,GAAkB,UAACT,GAAD,EAAKC,GAAL,EAAa;AAC3BA,EAAAA,GAAG,CAACC,SAAJ,CAAc,cAAd,EAA8B,kBAA9B;AAEAT,EAAAA,IAAI,CAACU,IAAL,CAAU;AAAE,WAAQH,GAAG,CAACU,MAAJ,CAAWC;AAArB,GAAV,EAAoC,UAASP,GAAT,EAAcQ,QAAd,EAAwB;AACxD,QAAIR,GAAJ,EACIH,GAAG,CAACY,IAAJ,CAAS;AAAEC,MAAAA,OAAO,EAAE,iBAAX;AAA8BC,MAAAA,MAAM,EAAGX;AAAvC,KAAT,EADJ,KAGIH,GAAG,CAACK,IAAJ,CAASC,IAAI,CAACC,SAAL,CAAeI,QAAf,EAAwB,IAAxB,EAA6B,CAA7B,CAAT;AACP,GALD;AAMH,CATD;;AAWAf,MAAM,CAACmB,OAAP,GAAiB,UAAChB,GAAD,EAAKC,GAAL,EAAY;AAC3BA,EAAAA,GAAG,CAACC,SAAJ,CAAc,cAAd,EAA6B,kBAA7B;AAEE,MAAIe,KAAK,GAAGjB,GAAG,CAACU,MAAJ,CAAWC,EAAvB;AACA,MAAIO,WAAW,GAAGD,KAAK,CAACE,QAAN,EAAlB;AACA1B,EAAAA,IAAI,CAACU,IAAL,CAAU;AAAC,gBAAW;AAACiB,MAAAA,MAAM,EAACF;AAAR;AAAZ,GAAV,EAA4C,UAASd,GAAT,EAAaiB,IAAb,EAAmB;AAC3D,QAAIjB,GAAJ,EACEH,GAAG,CAACY,IAAJ,CAAS;AAAEC,MAAAA,OAAO,EAAE,gBAAX;AAA6BC,MAAAA,MAAM,EAAGX;AAAtC,KAAT,EADF,KAEI;AACH;AAEG,UAAGiB,IAAI,CAACC,MAAL,IAAe,CAAlB,EACIrB,GAAG,CAACY,IAAJ,CAAS;AAACC,QAAAA,OAAO,EAAC;AAAT,OAAT,EADJ,CAEA;AAFA,WAIIb,GAAG,CAACY,IAAJ,CAAS;AAAEC,UAAAA,OAAO,EAAE,gDAAX;AAA4DS,UAAAA,IAAI,EAACF;AAAjE,SAAT;AAEP;AACN,GAbC;AAcH,CAnBD;;AAqBAxB,MAAM,CAAC2B,OAAP,GAAiB,UAACxB,GAAD,EAAKC,GAAL,EAAa;AAC1BA,EAAAA,GAAG,CAACC,SAAJ,CAAc,cAAd,EAA8B,kBAA9B;AACA,MAAImB,IAAI,GAAG,IAAI5B,IAAJ,EAAX,CAF0B,CAG1B;;AACAA,EAAAA,IAAI,CAACuB,OAAL,CAAa;AAACS,IAAAA,SAAS,EAAEzB,GAAG,CAAC0B,IAAJ,CAASD;AAArB,GAAb,EAA8C,UAAUrB,GAAV,EAAeiB,IAAf,EAAqB;AAC/D,QAAIjB,GAAJ,EAAS;AACLH,MAAAA,GAAG,CAACY,IAAJ,CAAS;AAACC,QAAAA,OAAO,EAAE,OAAV;AAAmBC,QAAAA,MAAM,EAAEX;AAA3B,OAAT;AACH,KAFD,MAEO;AACH;AACA,UAAIiB,IAAI,IAAI,IAAR,IAAgBA,IAAI,CAACI,SAAL,IAAkBzB,GAAG,CAAC0B,IAAJ,CAASD,SAA/C,EACIxB,GAAG,CAACY,IAAJ,CAAS;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAT,EADJ,KAEK;AACD,YAAIa,KAAK,GAAG,IAAIlC,IAAJ,EAAZ;AACAkC,QAAAA,KAAK,CAACC,QAAN,GAAiB5B,GAAG,CAAC0B,IAAJ,CAASE,QAA1B;AACAD,QAAAA,KAAK,CAACF,SAAN,GAAkBzB,GAAG,CAAC0B,IAAJ,CAASD,SAA3B;AACAE,QAAAA,KAAK,CAACE,YAAN,GAAqB7B,GAAG,CAAC0B,IAAJ,CAASG,YAA9B;AACAF,QAAAA,KAAK,CAACG,IAAN,CAAW,UAAU1B,GAAV,EAAe;AACtB,cAAIA,GAAJ,EACIH,GAAG,CAACY,IAAJ,CAAS;AAACC,YAAAA,OAAO,EAAE,OAAV;AAAmBC,YAAAA,MAAM,EAAEX;AAA3B,WAAT,EADJ,KAGIH,GAAG,CAACY,IAAJ,CAAS;AAACC,YAAAA,OAAO,EAAE,kCAAV;AAA8CS,YAAAA,IAAI,EAAEI;AAApD,WAAT;AACP,SALD;AAMH;AACJ;AACJ,GApBD;AAqBH,CAzBD;;AA2BA9B,MAAM,CAACkC,QAAP,GAAkB,UAAC/B,GAAD,EAAMC,GAAN,EAAe;AAC7BA,EAAAA,GAAG,CAACC,SAAJ,CAAc,cAAd,EAA6B,kBAA7B;AACAT,EAAAA,IAAI,CAACuC,QAAL,CAAc;AAAC,WAAMhC,GAAG,CAACU,MAAJ,CAAWC;AAAlB,GAAd,EAAoC;AAAC,WAAM,CAAP;AAAS,iBAAY;AAArB,GAApC,EAA4D,UAASP,GAAT,EAAaiB,IAAb,EAAmB;AAC3E,QAAIjB,GAAJ,EACIH,GAAG,CAACY,IAAJ,CAAS;AAAEC,MAAAA,OAAO,EAAE,OAAX;AAAoBC,MAAAA,MAAM,EAAGX;AAA7B,KAAT,EADJ,KAEI;AACAiB,MAAAA,IAAI,CAACS,IAAL,CAAU,UAAS1B,GAAT,EAAa;AACnB,YAAGA,GAAH,EACIH,GAAG,CAACY,IAAJ,CAAS;AAACC,UAAAA,OAAO,EAAC;AAAT,SAAT,EADJ,KAGIb,GAAG,CAACY,IAAJ,CAAS;AAACC,UAAAA,OAAO,EAAC,iBAAgBO,IAAI,CAACF,QAAL;AAAzB,SAAT;AACP,OALD;AAMH;AACJ,GAXD;AAYH,CAdD;;AAgBAtB,MAAM,CAACoC,UAAP,GAAoB,UAACjC,GAAD,EAAKC,GAAL,EAAa;AAC7BR,EAAAA,IAAI,CAACyC,iBAAL,CAAuBlC,GAAG,CAACU,MAAJ,CAAWC,EAAlC,EAAsC,UAASP,GAAT,EAAa;AAC/C,QAAGA,GAAH,EACIH,GAAG,CAACY,IAAJ,CAAS;AAACC,MAAAA,OAAO,EAAC;AAAT,KAAT,EADJ,KAGIb,GAAG,CAACY,IAAJ,CAAS;AAACC,MAAAA,OAAO,EAAC;AAAT,KAAT;AACP,GALD;AAMH,CAPD;;AASAjB,MAAM,CAACsC,OAAP,GAAiB,UAACnC,GAAD,EAAKC,GAAL,EAAa;AAC1BA,EAAAA,GAAG,CAACC,SAAJ,CAAc,cAAd,EAA6B,kBAA7B;AACAT,EAAAA,IAAI,CAACuC,QAAL,CAAchC,GAAG,CAACU,MAAJ,CAAWC,EAAzB,EAA6B,UAASP,GAAT,EAAciB,IAAd,EAAmB;AAC5C,QAAIjB,GAAJ,EACIH,GAAG,CAACY,IAAJ,CAAS;AAAEC,MAAAA,OAAO,EAAE,iBAAX;AAA8BC,MAAAA,MAAM,EAAGX;AAAvC,KAAT,EADJ,KAEK;AACD,UAAGiB,IAAI,CAACe,SAAL,GAAiB,GAApB,EAAwB;AACpBnC,QAAAA,GAAG,CAACY,IAAJ,CAAS;AAACC,UAAAA,OAAO,EAAC;AAAT,SAAT;AACH,OAFD,MAGI;AACA,YAAIuB,KAAK,GAAGhB,IAAI,CAACiB,IAAL,CAAUhB,MAAtB;AACAD,QAAAA,IAAI,CAACiB,IAAL,CAAUD,KAAV,IAAmBrC,GAAG,CAAC0B,IAAJ,CAASa,GAA5B;AACAlB,QAAAA,IAAI,CAACmB,YAAL,CAAkB,MAAlB;AACAnB,QAAAA,IAAI,CAACe,SAAL,IAAkB,GAAlB;AACAf,QAAAA,IAAI,CAACS,IAAL,CAAU,UAAS1B,GAAT,EAAa;AACnB,cAAGA,GAAH,EACIH,GAAG,CAACY,IAAJ,CAAS;AAACC,YAAAA,OAAO,EAAC,OAAT;AAAiBC,YAAAA,MAAM,EAACX;AAAxB,WAAT,EAFe,CAGpB;;AACCH,UAAAA,GAAG,CAACY,IAAJ,CAAS;AAACC,YAAAA,OAAO,EAAC,2BAAT;AAAsCS,YAAAA,IAAI,EAACF;AAA3C,WAAT;AACH,SALD;AAMH;AAGJ;AACJ,GAtBD;AAuBH,CAzBD;;AA2BAxB,MAAM,CAAC4C,UAAP,GAAoB,UAACzC,GAAD,EAAKC,GAAL,EAAa;AAC7BA,EAAAA,GAAG,CAACC,SAAJ,CAAc,cAAd,EAA6B,kBAA7B;AACAT,EAAAA,IAAI,CAACuC,QAAL,CAAchC,GAAG,CAACU,MAAJ,CAAWC,EAAzB,EAA6B,UAASP,GAAT,EAAciB,IAAd,EAAmB;AAC5C,QAAIjB,GAAJ,EACIH,GAAG,CAACY,IAAJ,CAAS;AAAEC,MAAAA,OAAO,EAAE,iBAAX;AAA8BC,MAAAA,MAAM,EAAGX;AAAvC,KAAT,EADJ,KAEK;AACD,WAAI,IAAIsC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGrB,IAAI,CAACiB,IAAL,CAAUhB,MAA7B,EAAqCoB,CAAC,EAAtC,EAAyC;AACrC,YAAIL,KAAK,GAAG,CAAZ;;AACA,YAAGhB,IAAI,CAACiB,IAAL,CAAUI,CAAV,KAAgB1C,GAAG,CAAC0B,IAAJ,CAASa,GAA5B,EAAgC;AAC5BF,UAAAA,KAAK,GAAGK,CAAR;AACArB,UAAAA,IAAI,CAACiB,IAAL,CAAUK,MAAV,CAAiBD,CAAjB,EAAmB,CAAnB;AACArB,UAAAA,IAAI,CAACmB,YAAL,CAAkB,MAAlB;AACAnB,UAAAA,IAAI,CAACe,SAAL,IAAkB,GAAlB;AACAf,UAAAA,IAAI,CAACS,IAAL,CAAU,UAAS1B,GAAT,EAAa;AACnB,gBAAGA,GAAH,EACIH,GAAG,CAACY,IAAJ,CAAS;AAACC,cAAAA,OAAO,EAAC,wBAAT;AAAkCC,cAAAA,MAAM,EAACX;AAAzC,aAAT;AAEJH,YAAAA,GAAG,CAACY,IAAJ,CAAS;AAACC,cAAAA,OAAO,EAAC,4BAAT;AAAuCS,cAAAA,IAAI,EAACF;AAA5C,aAAT;AACH,WALD;AAMH;;AACD,YAAGqB,CAAC,IAAIrB,IAAI,CAACiB,IAAL,CAAUhB,MAAV,GAAkB,CAAvB,IAA4Be,KAAK,IAAI,CAAxC,EACIpC,GAAG,CAACY,IAAJ,CAAS;AAACC,UAAAA,OAAO,EAAC,gCAAT;AAA0CC,UAAAA,MAAM,EAACX;AAAjD,SAAT;AACP;AACJ;AACJ,GAtBD;AAuBH,CAzBD;;AA6BAwC,MAAM,CAACC,OAAP,GAAiBhD,MAAjB",
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes",
      "sourcesContent": [
        "// var mongodbUri = 'mongodb+srv://qianwenzhangnancy:zqw123456@wit-qianwenzhang-cluster-yyg37.mongodb.net/taskmanagement';\r\n// var mongodbUri = 'mongodb+srv://qianwenzhangnancy:zqw123456@wit-qianwenzhang-cluster-yyg37.mongodb.net/taskmanagementdb?';\r\n// let mongoose = require('mongoose');\r\n// mongoose.connect(mongodbUri);\r\n//\r\n// let db = mongoose.connection;\r\n// db.on('error',function (err) {\r\n//   console.log('Unable to Connect to  [' + db.name + ']',err);\r\n// });\r\n// db.once('open',function () {\r\n//   console.log('Successfully Connected to  [' + db.name + ']');\r\n// });\r\n\r\nvar User = require('../models/users');\r\nvar Tree = require('../models/trees');\r\nlet express = require('express');\r\nlet router = express.Router();\r\n\r\nrouter.getUsers = (req,res) => {\r\n    res.setHeader('Content-Type', 'application/json');\r\n    User.find(function (err, users) {\r\n        if(err)\r\n            res.send(err);\r\n        res.send(JSON.stringify(users,null,5));\r\n    });\r\n}\r\n\r\nrouter.checkOne = (req,res) => {\r\n    res.setHeader('Content-Type', 'application/json');\r\n\r\n    User.find({ \"_id\" : req.params.id },function(err, donation) {\r\n        if (err)\r\n            res.json({ message: 'USER NOT Found!', errmsg : err } );\r\n        else\r\n            res.send(JSON.stringify(donation,null,5));\r\n    });\r\n}\r\n\r\nrouter.findOne = (req,res) =>{\r\n  res.setHeader('Content-Type','application/json');\r\n\r\n    var query = req.params.id;\r\n    var queryString = query.toString();\r\n    User.find({\"userName\":{$regex:queryString}},function(err,user) {\r\n        if (err)\r\n          res.json({ message: 'USER NOT FOUND', errmsg : err } );\r\n        else{\r\n         // res.send(user[userName]);\r\n\r\n            if(user.length == 0)\r\n                res.json({message:'USER NOT FOUND'});\r\n            // if(user != null)\r\n            else\r\n                res.json({ message: 'User has found! Do you want to send a request?',data:user} );\r\n\r\n        }\r\n  });\r\n}\r\n\r\nrouter.addUser = (req,res) => {\r\n    res.setHeader('Content-Type', 'application/json');\r\n    var user = new User();\r\n    //verify whether the userName and userEmail have existed or not\r\n    User.findOne({userEmail: req.body.userEmail}, function (err, user) {\r\n        if (err) {\r\n            res.json({message: 'ERROR', errmsg: err});\r\n        } else {\r\n            // if(user.userName != null)\r\n            if (user != null && user.userEmail == req.body.userEmail)\r\n                res.json({message: 'user email already exists'})\r\n            else {\r\n                let user1 = new User();\r\n                user1.userName = req.body.userName;\r\n                user1.userEmail = req.body.userEmail;\r\n                user1.userPassword = req.body.userPassword;\r\n                user1.save(function (err) {\r\n                    if (err)\r\n                        res.json({message: 'ERROR', errmsg: err});\r\n                    else\r\n                        res.json({message: 'User has registered successfully', data: user1})\r\n                })\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nrouter.getCoins = (req, res)  => {\r\n    res.setHeader('Content-Type','application/json');\r\n    User.findById({\"_id\":req.params.id},{\"_id\":0,\"userCoins\":1},function(err,user) {\r\n        if (err)\r\n            res.json({ message: 'ERROR', errmsg : err } );\r\n        else{\r\n            user.save(function(err){\r\n                if(err)\r\n                    res.json({message:'ERROR'});\r\n                else\r\n                    res.json({message:'your coins: '+ user.toString()});\r\n            })\r\n        }\r\n    });\r\n}\r\n\r\nrouter.deleteUser = (req,res) => {\r\n    User.findByIdAndRemove(req.params.id, function(err){\r\n        if(err)\r\n            res.json({message:'User NOT DELETED!'})\r\n        else\r\n            res.json({message:'User Successfully Deleted!'});\r\n    });\r\n}\r\n\r\nrouter.putTree = (req,res) => {\r\n    res.setHeader('Content-Type','application/json');\r\n    User.findById(req.params.id, function(err, user){\r\n        if (err)\r\n            res.json({ message: 'USER not Found!', errmsg : err } );\r\n        else {\r\n            if(user.userCoins < 500){\r\n                res.json({message:'Sorry, you do not have enough money!'})\r\n            }\r\n            else{\r\n                let count = user.tree.length;\r\n                user.tree[count] = req.body._id;\r\n                user.markModified('tree');\r\n                user.userCoins -= 500;\r\n                user.save(function(err){\r\n                    if(err)\r\n                        res.json({message:'Error',errmsg:err})\r\n                   // user.tree.push(req.body._id);\r\n                    res.json({message:'Tree Successfully Bought!', data:user});\r\n                })\r\n            }\r\n\r\n\r\n        }\r\n    })\r\n}\r\n\r\nrouter.deleteTree = (req,res) => {\r\n    res.setHeader('Content-Type','application/json');\r\n    User.findById(req.params.id, function(err, user){\r\n        if (err)\r\n            res.json({ message: 'USER not Found!', errmsg : err } );\r\n        else {\r\n            for(var i = 0; i < user.tree.length; i++){\r\n                let count = 0;\r\n                if(user.tree[i] == req.body._id){\r\n                    count = i;\r\n                    user.tree.splice(i,1);\r\n                    user.markModified('tree');\r\n                    user.userCoins += 300;\r\n                    user.save(function(err){\r\n                        if(err)\r\n                            res.json({message:'Tree cannot be deleted',errmsg:err})\r\n\r\n                        res.json({message:'Tree Successfully Deleted!', data:user});\r\n                    })\r\n                }\r\n                if(i == user.tree.length -1 && count == 0)\r\n                    res.json({message:'You have not bought this tree!',errmsg:err});\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572931872245
  },
  "{\"sourceRoot\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"filename\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\models\\\\trees.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\models\\trees.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\models\\trees.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\models\\trees.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\models",
        "sourceFileName": "trees.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar TreeSchema = new mongoose.Schema({\n  treeName: String,\n  //0 for bush,1 for tree\n  treeType: Number,\n  treePicPath: String,\n  treeDescription: String,\n  coinsToBuy: {\n    type: Number,\n    default: 500\n  }\n}, {\n  collection: 'trees'\n});\nmodule.exports = mongoose.model('Tree', TreeSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyZWVzLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlRyZWVTY2hlbWEiLCJTY2hlbWEiLCJ0cmVlTmFtZSIsIlN0cmluZyIsInRyZWVUeXBlIiwiTnVtYmVyIiwidHJlZVBpY1BhdGgiLCJ0cmVlRGVzY3JpcHRpb24iLCJjb2luc1RvQnV5IiwidHlwZSIsImRlZmF1bHQiLCJjb2xsZWN0aW9uIiwibW9kdWxlIiwiZXhwb3J0cyIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7O0FBRUEsSUFBSUMsVUFBVSxHQUFHLElBQUlGLFFBQVEsQ0FBQ0csTUFBYixDQUNiO0FBQ0lDLEVBQUFBLFFBQVEsRUFBRUMsTUFEZDtBQUVJO0FBQ0FDLEVBQUFBLFFBQVEsRUFBRUMsTUFIZDtBQUlJQyxFQUFBQSxXQUFXLEVBQUNILE1BSmhCO0FBS0lJLEVBQUFBLGVBQWUsRUFBQ0osTUFMcEI7QUFNSUssRUFBQUEsVUFBVSxFQUFFO0FBQUNDLElBQUFBLElBQUksRUFBRUosTUFBUDtBQUFlSyxJQUFBQSxPQUFPLEVBQUU7QUFBeEI7QUFOaEIsQ0FEYSxFQVViO0FBQ0lDLEVBQUFBLFVBQVUsRUFBQztBQURmLENBVmEsQ0FBakI7QUFjQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCZixRQUFRLENBQUNnQixLQUFULENBQWUsTUFBZixFQUFzQmQsVUFBdEIsQ0FBakIiLCJzb3VyY2VSb290IjoiRDpcXDR0aFllYXJfMXN0U2VtXFxXZWJEZXZlbG9wbWVudFxcdGFza01hbmFnZW1lbnRfUXdaXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xyXG5cclxubGV0IFRyZWVTY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKFxyXG4gICAge1xyXG4gICAgICAgIHRyZWVOYW1lOiBTdHJpbmcsXHJcbiAgICAgICAgLy8wIGZvciBidXNoLDEgZm9yIHRyZWVcclxuICAgICAgICB0cmVlVHlwZTogTnVtYmVyLFxyXG4gICAgICAgIHRyZWVQaWNQYXRoOlN0cmluZyxcclxuICAgICAgICB0cmVlRGVzY3JpcHRpb246U3RyaW5nLFxyXG4gICAgICAgIGNvaW5zVG9CdXk6IHt0eXBlOiBOdW1iZXIsIGRlZmF1bHQ6IDUwMH1cclxuXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIGNvbGxlY3Rpb246J3RyZWVzJ1xyXG4gICAgfSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IG1vbmdvb3NlLm1vZGVsKCdUcmVlJyxUcmVlU2NoZW1hKTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "trees.js"
      ],
      "names": [
        "mongoose",
        "require",
        "TreeSchema",
        "Schema",
        "treeName",
        "String",
        "treeType",
        "Number",
        "treePicPath",
        "treeDescription",
        "coinsToBuy",
        "type",
        "default",
        "collection",
        "module",
        "exports",
        "model"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,UAAU,GAAG,IAAIF,QAAQ,CAACG,MAAb,CACb;AACIC,EAAAA,QAAQ,EAAEC,MADd;AAEI;AACAC,EAAAA,QAAQ,EAAEC,MAHd;AAIIC,EAAAA,WAAW,EAACH,MAJhB;AAKII,EAAAA,eAAe,EAACJ,MALpB;AAMIK,EAAAA,UAAU,EAAE;AAACC,IAAAA,IAAI,EAAEJ,MAAP;AAAeK,IAAAA,OAAO,EAAE;AAAxB;AANhB,CADa,EAUb;AACIC,EAAAA,UAAU,EAAC;AADf,CAVa,CAAjB;AAcAC,MAAM,CAACC,OAAP,GAAiBf,QAAQ,CAACgB,KAAT,CAAe,MAAf,EAAsBd,UAAtB,CAAjB",
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\models",
      "sourcesContent": [
        "let mongoose = require('mongoose');\r\n\r\nlet TreeSchema = new mongoose.Schema(\r\n    {\r\n        treeName: String,\r\n        //0 for bush,1 for tree\r\n        treeType: Number,\r\n        treePicPath:String,\r\n        treeDescription:String,\r\n        coinsToBuy: {type: Number, default: 500}\r\n\r\n    },\r\n    {\r\n        collection:'trees'\r\n    });\r\n\r\nmodule.exports = mongoose.model('Tree',TreeSchema);\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572865172795
  },
  "{\"sourceRoot\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\routes\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"filename\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\routes\\\\trees.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes\\trees.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes\\trees.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes\\trees.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes",
        "sourceFileName": "trees.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n// var mongodbUri = 'mongodb+srv://qianwenzhangnancy:zqw123456@wit-qianwenzhang-cluster-yyg37.mongodb.net/taskmanagementdb';\n// let mongoose = require('mongoose');\n// mongoose.connect(mongodbUri);\nvar Tree = require(\"../models/trees\"); // let db = mongoose.connection;\n// db.on('error',function (err) {\n//     console.log('Unable to Connect to  [' + db.name + ']',err);\n// });\n// db.once('open',function () {\n//     console.log('Successfully Connected to  [' + db.name + ']');\n// });\n//\n// var Tree = require('../models/trees');\n\n\nvar express = require('express');\n\nvar router = express.Router();\n\nrouter.findAllPlants = function (req, res) {\n  res.setHeader('Content-Type', 'application/json');\n  Tree.find(function (err, trees) {\n    if (err) res.send(err);\n    res.send(JSON.stringify(trees, null, 5));\n  });\n};\n\nrouter.addTree = function (req, res) {\n  res.setHeader('Content-Type', 'application/json');\n  var tree = new Tree();\n  tree.treeName = req.body.treeName;\n  tree.treeType = req.body.treeType;\n  tree.treePicPath = req.body.treePicPath;\n  tree.treeDescription = req.body.treeDescription;\n  tree.save(function (err) {\n    if (err) res.send(err);\n    res.json({\n      message: \"New tree added!\",\n      data: tree\n    });\n  });\n};\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyZWVzLmpzIl0sIm5hbWVzIjpbIlRyZWUiLCJyZXF1aXJlIiwiZXhwcmVzcyIsInJvdXRlciIsIlJvdXRlciIsImZpbmRBbGxQbGFudHMiLCJyZXEiLCJyZXMiLCJzZXRIZWFkZXIiLCJmaW5kIiwiZXJyIiwidHJlZXMiLCJzZW5kIiwiSlNPTiIsInN0cmluZ2lmeSIsImFkZFRyZWUiLCJ0cmVlIiwidHJlZU5hbWUiLCJib2R5IiwidHJlZVR5cGUiLCJ0cmVlUGljUGF0aCIsInRyZWVEZXNjcmlwdGlvbiIsInNhdmUiLCJqc29uIiwibWVzc2FnZSIsImRhdGEiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTtBQUNBLElBQUlBLElBQUksR0FBR0MsT0FBTyxDQUFDLGlCQUFELENBQWxCLEMsQ0FFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBLElBQUlDLE9BQU8sR0FBR0QsT0FBTyxDQUFDLFNBQUQsQ0FBckI7O0FBQ0EsSUFBSUUsTUFBTSxHQUFHRCxPQUFPLENBQUNFLE1BQVIsRUFBYjs7QUFFQUQsTUFBTSxDQUFDRSxhQUFQLEdBQXVCLFVBQUNDLEdBQUQsRUFBS0MsR0FBTCxFQUFhO0FBQ2hDQSxFQUFBQSxHQUFHLENBQUNDLFNBQUosQ0FBYyxjQUFkLEVBQThCLGtCQUE5QjtBQUNBUixFQUFBQSxJQUFJLENBQUNTLElBQUwsQ0FBVSxVQUFVQyxHQUFWLEVBQWVDLEtBQWYsRUFBc0I7QUFDNUIsUUFBR0QsR0FBSCxFQUNJSCxHQUFHLENBQUNLLElBQUosQ0FBU0YsR0FBVDtBQUNKSCxJQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBU0MsSUFBSSxDQUFDQyxTQUFMLENBQWVILEtBQWYsRUFBcUIsSUFBckIsRUFBMEIsQ0FBMUIsQ0FBVDtBQUNILEdBSkQ7QUFLSCxDQVBEOztBQVNBUixNQUFNLENBQUNZLE9BQVAsR0FBaUIsVUFBQ1QsR0FBRCxFQUFLQyxHQUFMLEVBQWE7QUFDMUJBLEVBQUFBLEdBQUcsQ0FBQ0MsU0FBSixDQUFjLGNBQWQsRUFBOEIsa0JBQTlCO0FBQ0EsTUFBSVEsSUFBSSxHQUFHLElBQUloQixJQUFKLEVBQVg7QUFFQWdCLEVBQUFBLElBQUksQ0FBQ0MsUUFBTCxHQUFnQlgsR0FBRyxDQUFDWSxJQUFKLENBQVNELFFBQXpCO0FBQ0FELEVBQUFBLElBQUksQ0FBQ0csUUFBTCxHQUFnQmIsR0FBRyxDQUFDWSxJQUFKLENBQVNDLFFBQXpCO0FBQ0FILEVBQUFBLElBQUksQ0FBQ0ksV0FBTCxHQUFtQmQsR0FBRyxDQUFDWSxJQUFKLENBQVNFLFdBQTVCO0FBQ0FKLEVBQUFBLElBQUksQ0FBQ0ssZUFBTCxHQUF1QmYsR0FBRyxDQUFDWSxJQUFKLENBQVNHLGVBQWhDO0FBRUFMLEVBQUFBLElBQUksQ0FBQ00sSUFBTCxDQUFVLFVBQVVaLEdBQVYsRUFBZTtBQUNyQixRQUFHQSxHQUFILEVBQ0lILEdBQUcsQ0FBQ0ssSUFBSixDQUFTRixHQUFUO0FBQ0pILElBQUFBLEdBQUcsQ0FBQ2dCLElBQUosQ0FBUztBQUFDQyxNQUFBQSxPQUFPLEVBQUMsaUJBQVQ7QUFBNEJDLE1BQUFBLElBQUksRUFBRVQ7QUFBbEMsS0FBVDtBQUNILEdBSkQ7QUFLSCxDQWREOztBQWdCQVUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCeEIsTUFBakIiLCJzb3VyY2VSb290IjoiRDpcXDR0aFllYXJfMXN0U2VtXFxXZWJEZXZlbG9wbWVudFxcdGFza01hbmFnZW1lbnRfUXdaXFxyb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyB2YXIgbW9uZ29kYlVyaSA9ICdtb25nb2RiK3NydjovL3FpYW53ZW56aGFuZ25hbmN5OnpxdzEyMzQ1NkB3aXQtcWlhbndlbnpoYW5nLWNsdXN0ZXIteXlnMzcubW9uZ29kYi5uZXQvdGFza21hbmFnZW1lbnRkYic7XHJcbi8vIGxldCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcbi8vIG1vbmdvb3NlLmNvbm5lY3QobW9uZ29kYlVyaSk7XHJcbmxldCBUcmVlID0gcmVxdWlyZShcIi4uL21vZGVscy90cmVlc1wiKTtcclxuXHJcbi8vIGxldCBkYiA9IG1vbmdvb3NlLmNvbm5lY3Rpb247XHJcbi8vIGRiLm9uKCdlcnJvcicsZnVuY3Rpb24gKGVycikge1xyXG4vLyAgICAgY29uc29sZS5sb2coJ1VuYWJsZSB0byBDb25uZWN0IHRvICBbJyArIGRiLm5hbWUgKyAnXScsZXJyKTtcclxuLy8gfSk7XHJcbi8vIGRiLm9uY2UoJ29wZW4nLGZ1bmN0aW9uICgpIHtcclxuLy8gICAgIGNvbnNvbGUubG9nKCdTdWNjZXNzZnVsbHkgQ29ubmVjdGVkIHRvICBbJyArIGRiLm5hbWUgKyAnXScpO1xyXG4vLyB9KTtcclxuLy9cclxuLy8gdmFyIFRyZWUgPSByZXF1aXJlKCcuLi9tb2RlbHMvdHJlZXMnKTtcclxubGV0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmxldCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5cclxucm91dGVyLmZpbmRBbGxQbGFudHMgPSAocmVxLHJlcykgPT4ge1xyXG4gICAgcmVzLnNldEhlYWRlcignQ29udGVudC1UeXBlJywgJ2FwcGxpY2F0aW9uL2pzb24nKTtcclxuICAgIFRyZWUuZmluZChmdW5jdGlvbiAoZXJyLCB0cmVlcykge1xyXG4gICAgICAgIGlmKGVycilcclxuICAgICAgICAgICAgcmVzLnNlbmQoZXJyKVxyXG4gICAgICAgIHJlcy5zZW5kKEpTT04uc3RyaW5naWZ5KHRyZWVzLG51bGwsNSkpXHJcbiAgICB9KVxyXG59XHJcblxyXG5yb3V0ZXIuYWRkVHJlZSA9IChyZXEscmVzKSA9PiB7XHJcbiAgICByZXMuc2V0SGVhZGVyKCdDb250ZW50LVR5cGUnLCAnYXBwbGljYXRpb24vanNvbicpO1xyXG4gICAgbGV0IHRyZWUgPSBuZXcgVHJlZSgpO1xyXG5cclxuICAgIHRyZWUudHJlZU5hbWUgPSByZXEuYm9keS50cmVlTmFtZTtcclxuICAgIHRyZWUudHJlZVR5cGUgPSByZXEuYm9keS50cmVlVHlwZTtcclxuICAgIHRyZWUudHJlZVBpY1BhdGggPSByZXEuYm9keS50cmVlUGljUGF0aDtcclxuICAgIHRyZWUudHJlZURlc2NyaXB0aW9uID0gcmVxLmJvZHkudHJlZURlc2NyaXB0aW9uO1xyXG5cclxuICAgIHRyZWUuc2F2ZShmdW5jdGlvbiAoZXJyKSB7XHJcbiAgICAgICAgaWYoZXJyKVxyXG4gICAgICAgICAgICByZXMuc2VuZChlcnIpXHJcbiAgICAgICAgcmVzLmpzb24oe21lc3NhZ2U6XCJOZXcgdHJlZSBhZGRlZCFcIiwgZGF0YTogdHJlZX0pO1xyXG4gICAgfSlcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "trees.js"
      ],
      "names": [
        "Tree",
        "require",
        "express",
        "router",
        "Router",
        "findAllPlants",
        "req",
        "res",
        "setHeader",
        "find",
        "err",
        "trees",
        "send",
        "JSON",
        "stringify",
        "addTree",
        "tree",
        "treeName",
        "body",
        "treeType",
        "treePicPath",
        "treeDescription",
        "save",
        "json",
        "message",
        "data",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;AACA;AACA;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,iBAAD,CAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIE,MAAM,GAAGD,OAAO,CAACE,MAAR,EAAb;;AAEAD,MAAM,CAACE,aAAP,GAAuB,UAACC,GAAD,EAAKC,GAAL,EAAa;AAChCA,EAAAA,GAAG,CAACC,SAAJ,CAAc,cAAd,EAA8B,kBAA9B;AACAR,EAAAA,IAAI,CAACS,IAAL,CAAU,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AAC5B,QAAGD,GAAH,EACIH,GAAG,CAACK,IAAJ,CAASF,GAAT;AACJH,IAAAA,GAAG,CAACK,IAAJ,CAASC,IAAI,CAACC,SAAL,CAAeH,KAAf,EAAqB,IAArB,EAA0B,CAA1B,CAAT;AACH,GAJD;AAKH,CAPD;;AASAR,MAAM,CAACY,OAAP,GAAiB,UAACT,GAAD,EAAKC,GAAL,EAAa;AAC1BA,EAAAA,GAAG,CAACC,SAAJ,CAAc,cAAd,EAA8B,kBAA9B;AACA,MAAIQ,IAAI,GAAG,IAAIhB,IAAJ,EAAX;AAEAgB,EAAAA,IAAI,CAACC,QAAL,GAAgBX,GAAG,CAACY,IAAJ,CAASD,QAAzB;AACAD,EAAAA,IAAI,CAACG,QAAL,GAAgBb,GAAG,CAACY,IAAJ,CAASC,QAAzB;AACAH,EAAAA,IAAI,CAACI,WAAL,GAAmBd,GAAG,CAACY,IAAJ,CAASE,WAA5B;AACAJ,EAAAA,IAAI,CAACK,eAAL,GAAuBf,GAAG,CAACY,IAAJ,CAASG,eAAhC;AAEAL,EAAAA,IAAI,CAACM,IAAL,CAAU,UAAUZ,GAAV,EAAe;AACrB,QAAGA,GAAH,EACIH,GAAG,CAACK,IAAJ,CAASF,GAAT;AACJH,IAAAA,GAAG,CAACgB,IAAJ,CAAS;AAACC,MAAAA,OAAO,EAAC,iBAAT;AAA4BC,MAAAA,IAAI,EAAET;AAAlC,KAAT;AACH,GAJD;AAKH,CAdD;;AAgBAU,MAAM,CAACC,OAAP,GAAiBxB,MAAjB",
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes",
      "sourcesContent": [
        "// var mongodbUri = 'mongodb+srv://qianwenzhangnancy:zqw123456@wit-qianwenzhang-cluster-yyg37.mongodb.net/taskmanagementdb';\r\n// let mongoose = require('mongoose');\r\n// mongoose.connect(mongodbUri);\r\nlet Tree = require(\"../models/trees\");\r\n\r\n// let db = mongoose.connection;\r\n// db.on('error',function (err) {\r\n//     console.log('Unable to Connect to  [' + db.name + ']',err);\r\n// });\r\n// db.once('open',function () {\r\n//     console.log('Successfully Connected to  [' + db.name + ']');\r\n// });\r\n//\r\n// var Tree = require('../models/trees');\r\nlet express = require('express');\r\nlet router = express.Router();\r\n\r\nrouter.findAllPlants = (req,res) => {\r\n    res.setHeader('Content-Type', 'application/json');\r\n    Tree.find(function (err, trees) {\r\n        if(err)\r\n            res.send(err)\r\n        res.send(JSON.stringify(trees,null,5))\r\n    })\r\n}\r\n\r\nrouter.addTree = (req,res) => {\r\n    res.setHeader('Content-Type', 'application/json');\r\n    let tree = new Tree();\r\n\r\n    tree.treeName = req.body.treeName;\r\n    tree.treeType = req.body.treeType;\r\n    tree.treePicPath = req.body.treePicPath;\r\n    tree.treeDescription = req.body.treeDescription;\r\n\r\n    tree.save(function (err) {\r\n        if(err)\r\n            res.send(err)\r\n        res.json({message:\"New tree added!\", data: tree});\r\n    })\r\n}\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1572865177858
  },
  "{\"sourceRoot\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\routes\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"filename\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\routes\\\\plantingRecords.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes\\plantingRecords.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes\\plantingRecords.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes\\plantingRecords.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes",
        "sourceFileName": "plantingRecords.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n// var mongodbUri = 'mongodb+srv://qianwenzhangnancy:zqw123456@wit-qianwenzhang-cluster-yyg37.mongodb.net/taskmanagementdb';\n// let mongoose = require('mongoose');\n// mongoose.connect(mongodbUri);\n//\n// let db = mongoose.connection;\n// db.on('error',function (err) {\n//     console.log('Unable to Connect to  [' + db.name + ']',err);\n// });\n// db.once('open',function () {\n//     console.log('Successfully Connected to  [' + db.name + ']');\n// });\nvar User = require('../models/users');\n\nvar Record = require('../models/plantingRecords');\n\nvar express = require('express');\n\nvar router = express.Router();\n\nfunction getTotalTime(array) {\n  var totalTime = 0;\n  array.forEach(function (obj) {\n    totalTime += obj.focusTime;\n  });\n  return totalTime;\n}\n\nrouter.deleteRecord = function (req, res) {\n  Record.findByIdAndRemove(req.params.id, function (err) {\n    if (err) res.send(err);else res.json({\n      message: 'Records Deleted!',\n      data: Record\n    });\n  });\n}; //主要是用户id和record id有点混淆了\n// router.findRecordsOfUser = function(req,res) {\n//     res.setHeader('Content-Type', 'application/json');\n//     Record.find({\"user._Id\":res.params.id},(function (err, records) {\n//         if(err)\n//             res.send(err)\n//         else{\n//             res.json({ data: records });\n//         }\n//     }))\n// }\n// router.totalFocusTime = (req,res) =>{\n//\n//     Record.find(function(err,records){\n//         if(err)\n//             res.send(err);\n//         else\n//             res.json({totalFocusTime: getTotalTime(records)})\n//     })\n// }\n\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBsYW50aW5nUmVjb3Jkcy5qcyJdLCJuYW1lcyI6WyJVc2VyIiwicmVxdWlyZSIsIlJlY29yZCIsImV4cHJlc3MiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJnZXRUb3RhbFRpbWUiLCJhcnJheSIsInRvdGFsVGltZSIsImZvckVhY2giLCJvYmoiLCJmb2N1c1RpbWUiLCJkZWxldGVSZWNvcmQiLCJyZXEiLCJyZXMiLCJmaW5kQnlJZEFuZFJlbW92ZSIsInBhcmFtcyIsImlkIiwiZXJyIiwic2VuZCIsImpzb24iLCJtZXNzYWdlIiwiZGF0YSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUlBLElBQUksR0FBR0MsT0FBTyxDQUFDLGlCQUFELENBQWxCOztBQUNBLElBQUlDLE1BQU0sR0FBR0QsT0FBTyxDQUFDLDJCQUFELENBQXBCOztBQUNBLElBQUlFLE9BQU8sR0FBR0YsT0FBTyxDQUFDLFNBQUQsQ0FBckI7O0FBQ0EsSUFBSUcsTUFBTSxHQUFHRCxPQUFPLENBQUNFLE1BQVIsRUFBYjs7QUFFQSxTQUFTQyxZQUFULENBQXNCQyxLQUF0QixFQUE0QjtBQUN4QixNQUFJQyxTQUFTLEdBQUcsQ0FBaEI7QUFDQUQsRUFBQUEsS0FBSyxDQUFDRSxPQUFOLENBQWMsVUFBU0MsR0FBVCxFQUFhO0FBQ3ZCRixJQUFBQSxTQUFTLElBQUlFLEdBQUcsQ0FBQ0MsU0FBakI7QUFDSCxHQUZEO0FBR0EsU0FBT0gsU0FBUDtBQUNIOztBQUVESixNQUFNLENBQUNRLFlBQVAsR0FBc0IsVUFBU0MsR0FBVCxFQUFhQyxHQUFiLEVBQWlCO0FBQ25DWixFQUFBQSxNQUFNLENBQUNhLGlCQUFQLENBQXlCRixHQUFHLENBQUNHLE1BQUosQ0FBV0MsRUFBcEMsRUFBdUMsVUFBU0MsR0FBVCxFQUFhO0FBQ2hELFFBQUdBLEdBQUgsRUFDSUosR0FBRyxDQUFDSyxJQUFKLENBQVNELEdBQVQsRUFESixLQUdJSixHQUFHLENBQUNNLElBQUosQ0FBUztBQUFDQyxNQUFBQSxPQUFPLEVBQUMsa0JBQVQ7QUFBNkJDLE1BQUFBLElBQUksRUFBRXBCO0FBQW5DLEtBQVQ7QUFDUCxHQUxEO0FBT0gsQ0FSRCxDLENBVUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0FxQixNQUFNLENBQUNDLE9BQVAsR0FBaUJwQixNQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcNHRoWWVhcl8xc3RTZW1cXFdlYkRldmVsb3BtZW50XFx0YXNrTWFuYWdlbWVudF9Rd1pcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHZhciBtb25nb2RiVXJpID0gJ21vbmdvZGIrc3J2Oi8vcWlhbndlbnpoYW5nbmFuY3k6enF3MTIzNDU2QHdpdC1xaWFud2VuemhhbmctY2x1c3Rlci15eWczNy5tb25nb2RiLm5ldC90YXNrbWFuYWdlbWVudGRiJztcclxuLy8gbGV0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcclxuLy8gbW9uZ29vc2UuY29ubmVjdChtb25nb2RiVXJpKTtcclxuLy9cclxuLy8gbGV0IGRiID0gbW9uZ29vc2UuY29ubmVjdGlvbjtcclxuLy8gZGIub24oJ2Vycm9yJyxmdW5jdGlvbiAoZXJyKSB7XHJcbi8vICAgICBjb25zb2xlLmxvZygnVW5hYmxlIHRvIENvbm5lY3QgdG8gIFsnICsgZGIubmFtZSArICddJyxlcnIpO1xyXG4vLyB9KTtcclxuLy8gZGIub25jZSgnb3BlbicsZnVuY3Rpb24gKCkge1xyXG4vLyAgICAgY29uc29sZS5sb2coJ1N1Y2Nlc3NmdWxseSBDb25uZWN0ZWQgdG8gIFsnICsgZGIubmFtZSArICddJyk7XHJcbi8vIH0pO1xyXG52YXIgVXNlciA9IHJlcXVpcmUoJy4uL21vZGVscy91c2VycycpO1xyXG52YXIgUmVjb3JkID0gcmVxdWlyZSgnLi4vbW9kZWxzL3BsYW50aW5nUmVjb3JkcycpO1xyXG5sZXQgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcclxubGV0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XHJcblxyXG5mdW5jdGlvbiBnZXRUb3RhbFRpbWUoYXJyYXkpe1xyXG4gICAgbGV0IHRvdGFsVGltZSA9IDA7XHJcbiAgICBhcnJheS5mb3JFYWNoKGZ1bmN0aW9uKG9iail7XHJcbiAgICAgICAgdG90YWxUaW1lICs9IG9iai5mb2N1c1RpbWU7XHJcbiAgICB9KVxyXG4gICAgcmV0dXJuIHRvdGFsVGltZTtcclxufVxyXG5cclxucm91dGVyLmRlbGV0ZVJlY29yZCA9IGZ1bmN0aW9uKHJlcSxyZXMpe1xyXG4gICAgUmVjb3JkLmZpbmRCeUlkQW5kUmVtb3ZlKHJlcS5wYXJhbXMuaWQsZnVuY3Rpb24oZXJyKXtcclxuICAgICAgICBpZihlcnIpXHJcbiAgICAgICAgICAgIHJlcy5zZW5kKGVycilcclxuICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIHJlcy5qc29uKHttZXNzYWdlOidSZWNvcmRzIERlbGV0ZWQhJywgZGF0YTogUmVjb3JkfSlcclxuICAgIH0pXHJcblxyXG59XHJcblxyXG4vL+S4u+imgeaYr+eUqOaIt2lk5ZKMcmVjb3JkIGlk5pyJ54K55re35reG5LqGXHJcbi8vIHJvdXRlci5maW5kUmVjb3Jkc09mVXNlciA9IGZ1bmN0aW9uKHJlcSxyZXMpIHtcclxuLy8gICAgIHJlcy5zZXRIZWFkZXIoJ0NvbnRlbnQtVHlwZScsICdhcHBsaWNhdGlvbi9qc29uJyk7XHJcbi8vICAgICBSZWNvcmQuZmluZCh7XCJ1c2VyLl9JZFwiOnJlcy5wYXJhbXMuaWR9LChmdW5jdGlvbiAoZXJyLCByZWNvcmRzKSB7XHJcbi8vICAgICAgICAgaWYoZXJyKVxyXG4vLyAgICAgICAgICAgICByZXMuc2VuZChlcnIpXHJcbi8vICAgICAgICAgZWxzZXtcclxuLy8gICAgICAgICAgICAgcmVzLmpzb24oeyBkYXRhOiByZWNvcmRzIH0pO1xyXG4vLyAgICAgICAgIH1cclxuLy8gICAgIH0pKVxyXG4vLyB9XHJcbi8vIHJvdXRlci50b3RhbEZvY3VzVGltZSA9IChyZXEscmVzKSA9PntcclxuLy9cclxuLy8gICAgIFJlY29yZC5maW5kKGZ1bmN0aW9uKGVycixyZWNvcmRzKXtcclxuLy8gICAgICAgICBpZihlcnIpXHJcbi8vICAgICAgICAgICAgIHJlcy5zZW5kKGVycik7XHJcbi8vICAgICAgICAgZWxzZVxyXG4vLyAgICAgICAgICAgICByZXMuanNvbih7dG90YWxGb2N1c1RpbWU6IGdldFRvdGFsVGltZShyZWNvcmRzKX0pXHJcbi8vICAgICB9KVxyXG4vLyB9XHJcblxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "plantingRecords.js"
      ],
      "names": [
        "User",
        "require",
        "Record",
        "express",
        "router",
        "Router",
        "getTotalTime",
        "array",
        "totalTime",
        "forEach",
        "obj",
        "focusTime",
        "deleteRecord",
        "req",
        "res",
        "findByIdAndRemove",
        "params",
        "id",
        "err",
        "send",
        "json",
        "message",
        "data",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,iBAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,2BAAD,CAApB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIG,MAAM,GAAGD,OAAO,CAACE,MAAR,EAAb;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AACxB,MAAIC,SAAS,GAAG,CAAhB;AACAD,EAAAA,KAAK,CAACE,OAAN,CAAc,UAASC,GAAT,EAAa;AACvBF,IAAAA,SAAS,IAAIE,GAAG,CAACC,SAAjB;AACH,GAFD;AAGA,SAAOH,SAAP;AACH;;AAEDJ,MAAM,CAACQ,YAAP,GAAsB,UAASC,GAAT,EAAaC,GAAb,EAAiB;AACnCZ,EAAAA,MAAM,CAACa,iBAAP,CAAyBF,GAAG,CAACG,MAAJ,CAAWC,EAApC,EAAuC,UAASC,GAAT,EAAa;AAChD,QAAGA,GAAH,EACIJ,GAAG,CAACK,IAAJ,CAASD,GAAT,EADJ,KAGIJ,GAAG,CAACM,IAAJ,CAAS;AAACC,MAAAA,OAAO,EAAC,kBAAT;AAA6BC,MAAAA,IAAI,EAAEpB;AAAnC,KAAT;AACP,GALD;AAOH,CARD,C,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAqB,MAAM,CAACC,OAAP,GAAiBpB,MAAjB",
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes",
      "sourcesContent": [
        "// var mongodbUri = 'mongodb+srv://qianwenzhangnancy:zqw123456@wit-qianwenzhang-cluster-yyg37.mongodb.net/taskmanagementdb';\r\n// let mongoose = require('mongoose');\r\n// mongoose.connect(mongodbUri);\r\n//\r\n// let db = mongoose.connection;\r\n// db.on('error',function (err) {\r\n//     console.log('Unable to Connect to  [' + db.name + ']',err);\r\n// });\r\n// db.once('open',function () {\r\n//     console.log('Successfully Connected to  [' + db.name + ']');\r\n// });\r\nvar User = require('../models/users');\r\nvar Record = require('../models/plantingRecords');\r\nlet express = require('express');\r\nlet router = express.Router();\r\n\r\nfunction getTotalTime(array){\r\n    let totalTime = 0;\r\n    array.forEach(function(obj){\r\n        totalTime += obj.focusTime;\r\n    })\r\n    return totalTime;\r\n}\r\n\r\nrouter.deleteRecord = function(req,res){\r\n    Record.findByIdAndRemove(req.params.id,function(err){\r\n        if(err)\r\n            res.send(err)\r\n        else\r\n            res.json({message:'Records Deleted!', data: Record})\r\n    })\r\n\r\n}\r\n\r\n//主要是用户id和record id有点混淆了\r\n// router.findRecordsOfUser = function(req,res) {\r\n//     res.setHeader('Content-Type', 'application/json');\r\n//     Record.find({\"user._Id\":res.params.id},(function (err, records) {\r\n//         if(err)\r\n//             res.send(err)\r\n//         else{\r\n//             res.json({ data: records });\r\n//         }\r\n//     }))\r\n// }\r\n// router.totalFocusTime = (req,res) =>{\r\n//\r\n//     Record.find(function(err,records){\r\n//         if(err)\r\n//             res.send(err);\r\n//         else\r\n//             res.json({totalFocusTime: getTotalTime(records)})\r\n//     })\r\n// }\r\n\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1572865177855
  },
  "{\"sourceRoot\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"filename\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\models\\\\plantingRecords.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\models\\plantingRecords.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\models\\plantingRecords.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\models\\plantingRecords.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\models",
        "sourceFileName": "plantingRecords.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar RecordSchema = new mongoose.Schema({\n  user: [{\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'user'\n  }],\n  tree: [{\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'tree'\n  }],\n  tag: [{\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'tag'\n  }],\n  plantedTime: Date,\n  endedTime: Date,\n  focusTime: {\n    type: Number,\n    default: 0\n  },\n  coinsEarn: {\n    type: Number,\n    default: 0\n  }\n}, {\n  collection: 'records'\n});\nmodule.exports = mongoose.model('Record', RecordSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBsYW50aW5nUmVjb3Jkcy5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJSZWNvcmRTY2hlbWEiLCJTY2hlbWEiLCJ1c2VyIiwidHlwZSIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJ0cmVlIiwidGFnIiwicGxhbnRlZFRpbWUiLCJEYXRlIiwiZW5kZWRUaW1lIiwiZm9jdXNUaW1lIiwiTnVtYmVyIiwiZGVmYXVsdCIsImNvaW5zRWFybiIsImNvbGxlY3Rpb24iLCJtb2R1bGUiLCJleHBvcnRzIiwibW9kZWwiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFFQSxJQUFJQyxZQUFZLEdBQUcsSUFBSUYsUUFBUSxDQUFDRyxNQUFiLENBQ2Y7QUFDSUMsRUFBQUEsSUFBSSxFQUFDLENBQUM7QUFDRkMsSUFBQUEsSUFBSSxFQUFDTCxRQUFRLENBQUNHLE1BQVQsQ0FBZ0JHLEtBQWhCLENBQXNCQyxRQUR6QjtBQUVGQyxJQUFBQSxHQUFHLEVBQUM7QUFGRixHQUFELENBRFQ7QUFLSUMsRUFBQUEsSUFBSSxFQUFDLENBQUM7QUFDRkosSUFBQUEsSUFBSSxFQUFDTCxRQUFRLENBQUNHLE1BQVQsQ0FBZ0JHLEtBQWhCLENBQXNCQyxRQUR6QjtBQUVGQyxJQUFBQSxHQUFHLEVBQUM7QUFGRixHQUFELENBTFQ7QUFTSUUsRUFBQUEsR0FBRyxFQUFDLENBQUM7QUFDREwsSUFBQUEsSUFBSSxFQUFDTCxRQUFRLENBQUNHLE1BQVQsQ0FBZ0JHLEtBQWhCLENBQXNCQyxRQUQxQjtBQUVEQyxJQUFBQSxHQUFHLEVBQUM7QUFGSCxHQUFELENBVFI7QUFhSUcsRUFBQUEsV0FBVyxFQUFFQyxJQWJqQjtBQWNJQyxFQUFBQSxTQUFTLEVBQUVELElBZGY7QUFlSUUsRUFBQUEsU0FBUyxFQUFFO0FBQUNULElBQUFBLElBQUksRUFBRVUsTUFBUDtBQUFlQyxJQUFBQSxPQUFPLEVBQUU7QUFBeEIsR0FmZjtBQWdCSUMsRUFBQUEsU0FBUyxFQUFFO0FBQUNaLElBQUFBLElBQUksRUFBRVUsTUFBUDtBQUFlQyxJQUFBQSxPQUFPLEVBQUU7QUFBeEI7QUFoQmYsQ0FEZSxFQW1CZjtBQUNJRSxFQUFBQSxVQUFVLEVBQUM7QUFEZixDQW5CZSxDQUFuQjtBQXVCQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCcEIsUUFBUSxDQUFDcUIsS0FBVCxDQUFlLFFBQWYsRUFBeUJuQixZQUF6QixDQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcNHRoWWVhcl8xc3RTZW1cXFdlYkRldmVsb3BtZW50XFx0YXNrTWFuYWdlbWVudF9Rd1pcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImxldCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcblxyXG5sZXQgUmVjb3JkU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYShcclxuICAgIHtcclxuICAgICAgICB1c2VyOlt7XHJcbiAgICAgICAgICAgIHR5cGU6bW9uZ29vc2UuU2NoZW1hLlR5cGVzLk9iamVjdElkLFxyXG4gICAgICAgICAgICByZWY6J3VzZXInXHJcbiAgICAgICAgfV0sXHJcbiAgICAgICAgdHJlZTpbe1xyXG4gICAgICAgICAgICB0eXBlOm1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuICAgICAgICAgICAgcmVmOid0cmVlJ1xyXG4gICAgICAgIH1dLFxyXG4gICAgICAgIHRhZzpbe1xyXG4gICAgICAgICAgICB0eXBlOm1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuICAgICAgICAgICAgcmVmOid0YWcnXHJcbiAgICAgICAgfV0sXHJcbiAgICAgICAgcGxhbnRlZFRpbWU6IERhdGUsXHJcbiAgICAgICAgZW5kZWRUaW1lOiBEYXRlLFxyXG4gICAgICAgIGZvY3VzVGltZToge3R5cGU6IE51bWJlciwgZGVmYXVsdDogMH0sXHJcbiAgICAgICAgY29pbnNFYXJuOiB7dHlwZTogTnVtYmVyLCBkZWZhdWx0OiAwfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgY29sbGVjdGlvbjoncmVjb3JkcydcclxuICAgIH0pO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBtb25nb29zZS5tb2RlbCgnUmVjb3JkJywgUmVjb3JkU2NoZW1hKTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "plantingRecords.js"
      ],
      "names": [
        "mongoose",
        "require",
        "RecordSchema",
        "Schema",
        "user",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "tree",
        "tag",
        "plantedTime",
        "Date",
        "endedTime",
        "focusTime",
        "Number",
        "default",
        "coinsEarn",
        "collection",
        "module",
        "exports",
        "model"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,YAAY,GAAG,IAAIF,QAAQ,CAACG,MAAb,CACf;AACIC,EAAAA,IAAI,EAAC,CAAC;AACFC,IAAAA,IAAI,EAACL,QAAQ,CAACG,MAAT,CAAgBG,KAAhB,CAAsBC,QADzB;AAEFC,IAAAA,GAAG,EAAC;AAFF,GAAD,CADT;AAKIC,EAAAA,IAAI,EAAC,CAAC;AACFJ,IAAAA,IAAI,EAACL,QAAQ,CAACG,MAAT,CAAgBG,KAAhB,CAAsBC,QADzB;AAEFC,IAAAA,GAAG,EAAC;AAFF,GAAD,CALT;AASIE,EAAAA,GAAG,EAAC,CAAC;AACDL,IAAAA,IAAI,EAACL,QAAQ,CAACG,MAAT,CAAgBG,KAAhB,CAAsBC,QAD1B;AAEDC,IAAAA,GAAG,EAAC;AAFH,GAAD,CATR;AAaIG,EAAAA,WAAW,EAAEC,IAbjB;AAcIC,EAAAA,SAAS,EAAED,IAdf;AAeIE,EAAAA,SAAS,EAAE;AAACT,IAAAA,IAAI,EAAEU,MAAP;AAAeC,IAAAA,OAAO,EAAE;AAAxB,GAff;AAgBIC,EAAAA,SAAS,EAAE;AAACZ,IAAAA,IAAI,EAAEU,MAAP;AAAeC,IAAAA,OAAO,EAAE;AAAxB;AAhBf,CADe,EAmBf;AACIE,EAAAA,UAAU,EAAC;AADf,CAnBe,CAAnB;AAuBAC,MAAM,CAACC,OAAP,GAAiBpB,QAAQ,CAACqB,KAAT,CAAe,QAAf,EAAyBnB,YAAzB,CAAjB",
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\models",
      "sourcesContent": [
        "let mongoose = require('mongoose');\r\n\r\nlet RecordSchema = new mongoose.Schema(\r\n    {\r\n        user:[{\r\n            type:mongoose.Schema.Types.ObjectId,\r\n            ref:'user'\r\n        }],\r\n        tree:[{\r\n            type:mongoose.Schema.Types.ObjectId,\r\n            ref:'tree'\r\n        }],\r\n        tag:[{\r\n            type:mongoose.Schema.Types.ObjectId,\r\n            ref:'tag'\r\n        }],\r\n        plantedTime: Date,\r\n        endedTime: Date,\r\n        focusTime: {type: Number, default: 0},\r\n        coinsEarn: {type: Number, default: 0},\r\n    },\r\n    {\r\n        collection:'records'\r\n    });\r\n\r\nmodule.exports = mongoose.model('Record', RecordSchema);\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572865172794
  },
  "{\"sourceRoot\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\routes\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"filename\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\routes\\\\tags.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes\\tags.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes\\tags.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes\\tags.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes",
        "sourceFileName": "tags.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Tag = require('../models/tags');\n\nvar express = require('express');\n\nvar router = express.Router();\n\nrouter.editTag = function (req, res) {\n  res.setHeader('Content-Type', 'application/json');\n  Tag.findById(req.params.id, function (err, tag) {\n    if (err) res.send(err);else {\n      tag.save(function (err) {\n        if (err) res.send(err);else {\n          if (req.body.tagColor != null) tag.tagColor = req.body.tagColor;\n          if (req.body.tagType != null) tag.tagType = req.body.tagType;\n          if (req.body.tagDescription != null) tag.tagDescription = req.body.tagDescription;\n          tag.save(function (err, tag) {\n            if (err) res.json({\n              message: 'Tag edited fail!',\n              errmsg: err\n            });\n            res.json({\n              message: 'Tag edited!',\n              data: tag\n            });\n          });\n        }\n      });\n    }\n  });\n};\n\nrouter.addTag = function (req, res) {\n  res.setHeader('Content-Type', 'application/json');\n  var tag = new Tag();\n  tag.tagType = req.body.tagType;\n  tag.tagColor = req.body.tagColor;\n  tag.tagDescription = req.body.tagDescription;\n  tag.save(function (err) {\n    if (err) res.send(err);\n    res.json({\n      message: \"Tag Added!\",\n      data: tag\n    });\n  });\n};\n\nrouter.deleteTag = function (req, res) {\n  res.setHeader('Content-Type', 'application/json');\n  Tag.findByIdAndRemove(req.params.id, function (err) {\n    if (err) res.send(err);else res.json({\n      message: \"Tag Deleted!\",\n      data: Tag\n    });\n  });\n};\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhZ3MuanMiXSwibmFtZXMiOlsiVGFnIiwicmVxdWlyZSIsImV4cHJlc3MiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJlZGl0VGFnIiwicmVxIiwicmVzIiwic2V0SGVhZGVyIiwiZmluZEJ5SWQiLCJwYXJhbXMiLCJpZCIsImVyciIsInRhZyIsInNlbmQiLCJzYXZlIiwiYm9keSIsInRhZ0NvbG9yIiwidGFnVHlwZSIsInRhZ0Rlc2NyaXB0aW9uIiwianNvbiIsIm1lc3NhZ2UiLCJlcnJtc2ciLCJkYXRhIiwiYWRkVGFnIiwiZGVsZXRlVGFnIiwiZmluZEJ5SWRBbmRSZW1vdmUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLEdBQUcsR0FBR0MsT0FBTyxDQUFDLGdCQUFELENBQWpCOztBQUNBLElBQUlDLE9BQU8sR0FBR0QsT0FBTyxDQUFDLFNBQUQsQ0FBckI7O0FBQ0EsSUFBSUUsTUFBTSxHQUFHRCxPQUFPLENBQUNFLE1BQVIsRUFBYjs7QUFFQUQsTUFBTSxDQUFDRSxPQUFQLEdBQWlCLFVBQVVDLEdBQVYsRUFBY0MsR0FBZCxFQUFtQjtBQUNoQ0EsRUFBQUEsR0FBRyxDQUFDQyxTQUFKLENBQWMsY0FBZCxFQUE4QixrQkFBOUI7QUFDQVIsRUFBQUEsR0FBRyxDQUFDUyxRQUFKLENBQWFILEdBQUcsQ0FBQ0ksTUFBSixDQUFXQyxFQUF4QixFQUEyQixVQUFVQyxHQUFWLEVBQWNDLEdBQWQsRUFBbUI7QUFDMUMsUUFBR0QsR0FBSCxFQUNJTCxHQUFHLENBQUNPLElBQUosQ0FBU0YsR0FBVCxFQURKLEtBRUk7QUFDQUMsTUFBQUEsR0FBRyxDQUFDRSxJQUFKLENBQVMsVUFBU0gsR0FBVCxFQUFhO0FBQ2xCLFlBQUdBLEdBQUgsRUFDSUwsR0FBRyxDQUFDTyxJQUFKLENBQVNGLEdBQVQsRUFESixLQUVJO0FBQ0EsY0FBR04sR0FBRyxDQUFDVSxJQUFKLENBQVNDLFFBQVQsSUFBcUIsSUFBeEIsRUFDSUosR0FBRyxDQUFDSSxRQUFKLEdBQWVYLEdBQUcsQ0FBQ1UsSUFBSixDQUFTQyxRQUF4QjtBQUNKLGNBQUdYLEdBQUcsQ0FBQ1UsSUFBSixDQUFTRSxPQUFULElBQW9CLElBQXZCLEVBQ0lMLEdBQUcsQ0FBQ0ssT0FBSixHQUFjWixHQUFHLENBQUNVLElBQUosQ0FBU0UsT0FBdkI7QUFDSixjQUFHWixHQUFHLENBQUNVLElBQUosQ0FBU0csY0FBVCxJQUEyQixJQUE5QixFQUNJTixHQUFHLENBQUNNLGNBQUosR0FBcUJiLEdBQUcsQ0FBQ1UsSUFBSixDQUFTRyxjQUE5QjtBQUNKTixVQUFBQSxHQUFHLENBQUNFLElBQUosQ0FBUyxVQUFVSCxHQUFWLEVBQWNDLEdBQWQsRUFBbUI7QUFDeEIsZ0JBQUdELEdBQUgsRUFDSUwsR0FBRyxDQUFDYSxJQUFKLENBQVM7QUFBQ0MsY0FBQUEsT0FBTyxFQUFDLGtCQUFUO0FBQTZCQyxjQUFBQSxNQUFNLEVBQUNWO0FBQXBDLGFBQVQ7QUFDSkwsWUFBQUEsR0FBRyxDQUFDYSxJQUFKLENBQVM7QUFBQ0MsY0FBQUEsT0FBTyxFQUFDLGFBQVQ7QUFBd0JFLGNBQUFBLElBQUksRUFBQ1Y7QUFBN0IsYUFBVDtBQUNILFdBSkQ7QUFNSDtBQUNKLE9BakJEO0FBa0JIO0FBQ0osR0F2QkQ7QUF3QkgsQ0ExQkQ7O0FBNEJBVixNQUFNLENBQUNxQixNQUFQLEdBQWdCLFVBQVNsQixHQUFULEVBQWFDLEdBQWIsRUFBaUI7QUFDN0JBLEVBQUFBLEdBQUcsQ0FBQ0MsU0FBSixDQUFjLGNBQWQsRUFBOEIsa0JBQTlCO0FBQ0EsTUFBSUssR0FBRyxHQUFHLElBQUliLEdBQUosRUFBVjtBQUVBYSxFQUFBQSxHQUFHLENBQUNLLE9BQUosR0FBY1osR0FBRyxDQUFDVSxJQUFKLENBQVNFLE9BQXZCO0FBQ0FMLEVBQUFBLEdBQUcsQ0FBQ0ksUUFBSixHQUFlWCxHQUFHLENBQUNVLElBQUosQ0FBU0MsUUFBeEI7QUFDQUosRUFBQUEsR0FBRyxDQUFDTSxjQUFKLEdBQXFCYixHQUFHLENBQUNVLElBQUosQ0FBU0csY0FBOUI7QUFFQU4sRUFBQUEsR0FBRyxDQUFDRSxJQUFKLENBQVMsVUFBVUgsR0FBVixFQUFlO0FBQ3BCLFFBQUdBLEdBQUgsRUFDSUwsR0FBRyxDQUFDTyxJQUFKLENBQVNGLEdBQVQ7QUFDSkwsSUFBQUEsR0FBRyxDQUFDYSxJQUFKLENBQVM7QUFBQ0MsTUFBQUEsT0FBTyxFQUFDLFlBQVQ7QUFBdUJFLE1BQUFBLElBQUksRUFBRVY7QUFBN0IsS0FBVDtBQUNILEdBSkQ7QUFLSCxDQWJEOztBQWVBVixNQUFNLENBQUNzQixTQUFQLEdBQW1CLFVBQVNuQixHQUFULEVBQWFDLEdBQWIsRUFBaUI7QUFDaENBLEVBQUFBLEdBQUcsQ0FBQ0MsU0FBSixDQUFjLGNBQWQsRUFBOEIsa0JBQTlCO0FBQ0FSLEVBQUFBLEdBQUcsQ0FBQzBCLGlCQUFKLENBQXNCcEIsR0FBRyxDQUFDSSxNQUFKLENBQVdDLEVBQWpDLEVBQW9DLFVBQVVDLEdBQVYsRUFBZTtBQUMvQyxRQUFHQSxHQUFILEVBQ0lMLEdBQUcsQ0FBQ08sSUFBSixDQUFTRixHQUFULEVBREosS0FHSUwsR0FBRyxDQUFDYSxJQUFKLENBQVM7QUFBQ0MsTUFBQUEsT0FBTyxFQUFDLGNBQVQ7QUFBeUJFLE1BQUFBLElBQUksRUFBQ3ZCO0FBQTlCLEtBQVQ7QUFDUCxHQUxEO0FBTUgsQ0FSRDs7QUFTQTJCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnpCLE1BQWpCIiwic291cmNlUm9vdCI6IkQ6XFw0dGhZZWFyXzFzdFNlbVxcV2ViRGV2ZWxvcG1lbnRcXHRhc2tNYW5hZ2VtZW50X1F3Wlxccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIFRhZyA9IHJlcXVpcmUoJy4uL21vZGVscy90YWdzJyk7XHJcbmxldCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG5sZXQgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxuXHJcbnJvdXRlci5lZGl0VGFnID0gZnVuY3Rpb24gKHJlcSxyZXMpIHtcclxuICAgIHJlcy5zZXRIZWFkZXIoJ0NvbnRlbnQtVHlwZScsICdhcHBsaWNhdGlvbi9qc29uJyk7XHJcbiAgICBUYWcuZmluZEJ5SWQocmVxLnBhcmFtcy5pZCxmdW5jdGlvbiAoZXJyLHRhZykge1xyXG4gICAgICAgIGlmKGVycilcclxuICAgICAgICAgICAgcmVzLnNlbmQoZXJyKVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIHRhZy5zYXZlKGZ1bmN0aW9uKGVycil7XHJcbiAgICAgICAgICAgICAgICBpZihlcnIpXHJcbiAgICAgICAgICAgICAgICAgICAgcmVzLnNlbmQoZXJyKVxyXG4gICAgICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICBpZihyZXEuYm9keS50YWdDb2xvciAhPSBudWxsKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0YWcudGFnQ29sb3IgPSByZXEuYm9keS50YWdDb2xvcjtcclxuICAgICAgICAgICAgICAgICAgICBpZihyZXEuYm9keS50YWdUeXBlICE9IG51bGwpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhZy50YWdUeXBlID0gcmVxLmJvZHkudGFnVHlwZTtcclxuICAgICAgICAgICAgICAgICAgICBpZihyZXEuYm9keS50YWdEZXNjcmlwdGlvbiAhPSBudWxsKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0YWcudGFnRGVzY3JpcHRpb24gPSByZXEuYm9keS50YWdEZXNjcmlwdGlvbjtcclxuICAgICAgICAgICAgICAgICAgICB0YWcuc2F2ZShmdW5jdGlvbiAoZXJyLHRhZykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZihlcnIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXMuanNvbih7bWVzc2FnZTonVGFnIGVkaXRlZCBmYWlsIScsIGVycm1zZzplcnJ9KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXMuanNvbih7bWVzc2FnZTonVGFnIGVkaXRlZCEnICxkYXRhOnRhZ30pO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgIH0pXHJcbn1cclxuXHJcbnJvdXRlci5hZGRUYWcgPSBmdW5jdGlvbihyZXEscmVzKXtcclxuICAgIHJlcy5zZXRIZWFkZXIoJ0NvbnRlbnQtVHlwZScsICdhcHBsaWNhdGlvbi9qc29uJyk7XHJcbiAgICBsZXQgdGFnID0gbmV3IFRhZygpXHJcblxyXG4gICAgdGFnLnRhZ1R5cGUgPSByZXEuYm9keS50YWdUeXBlO1xyXG4gICAgdGFnLnRhZ0NvbG9yID0gcmVxLmJvZHkudGFnQ29sb3I7XHJcbiAgICB0YWcudGFnRGVzY3JpcHRpb24gPSByZXEuYm9keS50YWdEZXNjcmlwdGlvbjtcclxuXHJcbiAgICB0YWcuc2F2ZShmdW5jdGlvbiAoZXJyKSB7XHJcbiAgICAgICAgaWYoZXJyKVxyXG4gICAgICAgICAgICByZXMuc2VuZChlcnIpXHJcbiAgICAgICAgcmVzLmpzb24oe21lc3NhZ2U6XCJUYWcgQWRkZWQhXCIsIGRhdGE6IHRhZ30pO1xyXG4gICAgfSlcclxufVxyXG5cclxucm91dGVyLmRlbGV0ZVRhZyA9IGZ1bmN0aW9uKHJlcSxyZXMpe1xyXG4gICAgcmVzLnNldEhlYWRlcignQ29udGVudC1UeXBlJywgJ2FwcGxpY2F0aW9uL2pzb24nKTtcclxuICAgIFRhZy5maW5kQnlJZEFuZFJlbW92ZShyZXEucGFyYW1zLmlkLGZ1bmN0aW9uIChlcnIpIHtcclxuICAgICAgICBpZihlcnIpXHJcbiAgICAgICAgICAgIHJlcy5zZW5kKGVycilcclxuICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIHJlcy5qc29uKHttZXNzYWdlOlwiVGFnIERlbGV0ZWQhXCIsIGRhdGE6VGFnfSlcclxuICAgIH0pXHJcbn1cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "tags.js"
      ],
      "names": [
        "Tag",
        "require",
        "express",
        "router",
        "Router",
        "editTag",
        "req",
        "res",
        "setHeader",
        "findById",
        "params",
        "id",
        "err",
        "tag",
        "send",
        "save",
        "body",
        "tagColor",
        "tagType",
        "tagDescription",
        "json",
        "message",
        "errmsg",
        "data",
        "addTag",
        "deleteTag",
        "findByIdAndRemove",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes",
      "sourcesContent": [
        "var Tag = require('../models/tags');\r\nlet express = require('express');\r\nlet router = express.Router();\r\n\r\nrouter.editTag = function (req,res) {\r\n    res.setHeader('Content-Type', 'application/json');\r\n    Tag.findById(req.params.id,function (err,tag) {\r\n        if(err)\r\n            res.send(err)\r\n        else{\r\n            tag.save(function(err){\r\n                if(err)\r\n                    res.send(err)\r\n                else{\r\n                    if(req.body.tagColor != null)\r\n                        tag.tagColor = req.body.tagColor;\r\n                    if(req.body.tagType != null)\r\n                        tag.tagType = req.body.tagType;\r\n                    if(req.body.tagDescription != null)\r\n                        tag.tagDescription = req.body.tagDescription;\r\n                    tag.save(function (err,tag) {\r\n                        if(err)\r\n                            res.json({message:'Tag edited fail!', errmsg:err})\r\n                        res.json({message:'Tag edited!' ,data:tag});\r\n                    })\r\n\r\n                }\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nrouter.addTag = function(req,res){\r\n    res.setHeader('Content-Type', 'application/json');\r\n    let tag = new Tag()\r\n\r\n    tag.tagType = req.body.tagType;\r\n    tag.tagColor = req.body.tagColor;\r\n    tag.tagDescription = req.body.tagDescription;\r\n\r\n    tag.save(function (err) {\r\n        if(err)\r\n            res.send(err)\r\n        res.json({message:\"Tag Added!\", data: tag});\r\n    })\r\n}\r\n\r\nrouter.deleteTag = function(req,res){\r\n    res.setHeader('Content-Type', 'application/json');\r\n    Tag.findByIdAndRemove(req.params.id,function (err) {\r\n        if(err)\r\n            res.send(err)\r\n        else\r\n            res.json({message:\"Tag Deleted!\", data:Tag})\r\n    })\r\n}\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1572865177857
  },
  "{\"sourceRoot\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"filename\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\models\\\\tags.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\models\\tags.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\models\\tags.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\models\\tags.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\models",
        "sourceFileName": "tags.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('../routes/dbConnect');\n\nvar TagSchema = new mongoose.Schema({\n  tagType: {\n    type: String,\n    default: \"Study\"\n  },\n  //color changed according to the emergency situation of task\n  tagColor: {\n    type: String,\n    default: \"white\"\n  },\n  //record what the user have done during the focus period\n  tagDescription: String\n}, {\n  collection: 'tags'\n});\nmodule.exports = mongoose.model('Tag', TagSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhZ3MuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiVGFnU2NoZW1hIiwiU2NoZW1hIiwidGFnVHlwZSIsInR5cGUiLCJTdHJpbmciLCJkZWZhdWx0IiwidGFnQ29sb3IiLCJ0YWdEZXNjcmlwdGlvbiIsImNvbGxlY3Rpb24iLCJtb2R1bGUiLCJleHBvcnRzIiwibW9kZWwiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMscUJBQUQsQ0FBdEI7O0FBRUEsSUFBSUMsU0FBUyxHQUFHLElBQUlGLFFBQVEsQ0FBQ0csTUFBYixDQUNaO0FBQ0lDLEVBQUFBLE9BQU8sRUFBRTtBQUFDQyxJQUFBQSxJQUFJLEVBQUVDLE1BQVA7QUFBZUMsSUFBQUEsT0FBTyxFQUFFO0FBQXhCLEdBRGI7QUFFSTtBQUNBQyxFQUFBQSxRQUFRLEVBQUU7QUFBQ0gsSUFBQUEsSUFBSSxFQUFDQyxNQUFOO0FBQWNDLElBQUFBLE9BQU8sRUFBRTtBQUF2QixHQUhkO0FBSUk7QUFDQUUsRUFBQUEsY0FBYyxFQUFDSDtBQUxuQixDQURZLEVBUVo7QUFDSUksRUFBQUEsVUFBVSxFQUFDO0FBRGYsQ0FSWSxDQUFoQjtBQVlBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJaLFFBQVEsQ0FBQ2EsS0FBVCxDQUFlLEtBQWYsRUFBc0JYLFNBQXRCLENBQWpCIiwic291cmNlUm9vdCI6IkQ6XFw0dGhZZWFyXzFzdFNlbVxcV2ViRGV2ZWxvcG1lbnRcXHRhc2tNYW5hZ2VtZW50X1F3WlxcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsibGV0IG1vbmdvb3NlID0gcmVxdWlyZSgnLi4vcm91dGVzL2RiQ29ubmVjdCcpO1xyXG5cclxubGV0IFRhZ1NjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoXHJcbiAgICB7XHJcbiAgICAgICAgdGFnVHlwZToge3R5cGU6IFN0cmluZywgZGVmYXVsdDogXCJTdHVkeVwifSxcclxuICAgICAgICAvL2NvbG9yIGNoYW5nZWQgYWNjb3JkaW5nIHRvIHRoZSBlbWVyZ2VuY3kgc2l0dWF0aW9uIG9mIHRhc2tcclxuICAgICAgICB0YWdDb2xvcjoge3R5cGU6U3RyaW5nLCBkZWZhdWx0OiBcIndoaXRlXCJ9LFxyXG4gICAgICAgIC8vcmVjb3JkIHdoYXQgdGhlIHVzZXIgaGF2ZSBkb25lIGR1cmluZyB0aGUgZm9jdXMgcGVyaW9kXHJcbiAgICAgICAgdGFnRGVzY3JpcHRpb246U3RyaW5nXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIGNvbGxlY3Rpb246J3RhZ3MnXHJcbiAgICB9KTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gbW9uZ29vc2UubW9kZWwoJ1RhZycsIFRhZ1NjaGVtYSk7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "tags.js"
      ],
      "names": [
        "mongoose",
        "require",
        "TagSchema",
        "Schema",
        "tagType",
        "type",
        "String",
        "default",
        "tagColor",
        "tagDescription",
        "collection",
        "module",
        "exports",
        "model"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,qBAAD,CAAtB;;AAEA,IAAIC,SAAS,GAAG,IAAIF,QAAQ,CAACG,MAAb,CACZ;AACIC,EAAAA,OAAO,EAAE;AAACC,IAAAA,IAAI,EAAEC,MAAP;AAAeC,IAAAA,OAAO,EAAE;AAAxB,GADb;AAEI;AACAC,EAAAA,QAAQ,EAAE;AAACH,IAAAA,IAAI,EAACC,MAAN;AAAcC,IAAAA,OAAO,EAAE;AAAvB,GAHd;AAII;AACAE,EAAAA,cAAc,EAACH;AALnB,CADY,EAQZ;AACII,EAAAA,UAAU,EAAC;AADf,CARY,CAAhB;AAYAC,MAAM,CAACC,OAAP,GAAiBZ,QAAQ,CAACa,KAAT,CAAe,KAAf,EAAsBX,SAAtB,CAAjB",
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\models",
      "sourcesContent": [
        "let mongoose = require('../routes/dbConnect');\r\n\r\nlet TagSchema = new mongoose.Schema(\r\n    {\r\n        tagType: {type: String, default: \"Study\"},\r\n        //color changed according to the emergency situation of task\r\n        tagColor: {type:String, default: \"white\"},\r\n        //record what the user have done during the focus period\r\n        tagDescription:String\r\n    },\r\n    {\r\n        collection:'tags'\r\n    });\r\n\r\nmodule.exports = mongoose.model('Tag', TagSchema);\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572865172795
  },
  "{\"sourceRoot\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\routes\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"filename\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\routes\\\\dbConnect.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes\\dbConnect.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes\\dbConnect.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes\\dbConnect.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes",
        "sourceFileName": "dbConnect.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongodbUri = 'mongodb+srv://qianwenzhangnancy:zqw123456@wit-qianwenzhang-cluster-yyg37.mongodb.net/taskmanagementdb';\n\nvar mongoose = require('mongoose');\n\nmongoose.connect(mongodbUri, {\n  useFindAndModify: false,\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nvar db = mongoose.connection;\ndb.on('error', function (err) {\n  console.log('Unable to Connect to  [' + db.name + ']', err);\n});\ndb.once('open', function () {\n  console.log('Successfully Connected to  [' + db.name + ']');\n});\nmodule.exports = mongoose;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiQ29ubmVjdC5qcyJdLCJuYW1lcyI6WyJtb25nb2RiVXJpIiwibW9uZ29vc2UiLCJyZXF1aXJlIiwiY29ubmVjdCIsInVzZUZpbmRBbmRNb2RpZnkiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJkYiIsImNvbm5lY3Rpb24iLCJvbiIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJuYW1lIiwib25jZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsVUFBVSxHQUFHLHVHQUFqQjs7QUFDQSxJQUFJQyxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUNBRCxRQUFRLENBQUNFLE9BQVQsQ0FBaUJILFVBQWpCLEVBQTZCO0FBQUVJLEVBQUFBLGdCQUFnQixFQUFFLEtBQXBCO0FBQTJCQyxFQUFBQSxlQUFlLEVBQUUsSUFBNUM7QUFBa0RDLEVBQUFBLGtCQUFrQixFQUFFO0FBQXRFLENBQTdCO0FBRUEsSUFBSUMsRUFBRSxHQUFHTixRQUFRLENBQUNPLFVBQWxCO0FBQ0FELEVBQUUsQ0FBQ0UsRUFBSCxDQUFNLE9BQU4sRUFBYyxVQUFVQyxHQUFWLEVBQWU7QUFDekJDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDRCQUE0QkwsRUFBRSxDQUFDTSxJQUEvQixHQUFzQyxHQUFsRCxFQUFzREgsR0FBdEQ7QUFDSCxDQUZEO0FBR0FILEVBQUUsQ0FBQ08sSUFBSCxDQUFRLE1BQVIsRUFBZSxZQUFZO0FBQ3ZCSCxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxpQ0FBaUNMLEVBQUUsQ0FBQ00sSUFBcEMsR0FBMkMsR0FBdkQ7QUFDSCxDQUZEO0FBSUFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmYsUUFBakIiLCJzb3VyY2VSb290IjoiRDpcXDR0aFllYXJfMXN0U2VtXFxXZWJEZXZlbG9wbWVudFxcdGFza01hbmFnZW1lbnRfUXdaXFxyb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbW9uZ29kYlVyaSA9ICdtb25nb2RiK3NydjovL3FpYW53ZW56aGFuZ25hbmN5OnpxdzEyMzQ1NkB3aXQtcWlhbndlbnpoYW5nLWNsdXN0ZXIteXlnMzcubW9uZ29kYi5uZXQvdGFza21hbmFnZW1lbnRkYic7XHJcbmxldCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcbm1vbmdvb3NlLmNvbm5lY3QobW9uZ29kYlVyaSwgeyB1c2VGaW5kQW5kTW9kaWZ5OiBmYWxzZSwgdXNlTmV3VXJsUGFyc2VyOiB0cnVlLCB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWUgfSk7XHJcblxyXG5sZXQgZGIgPSBtb25nb29zZS5jb25uZWN0aW9uO1xyXG5kYi5vbignZXJyb3InLGZ1bmN0aW9uIChlcnIpIHtcclxuICAgIGNvbnNvbGUubG9nKCdVbmFibGUgdG8gQ29ubmVjdCB0byAgWycgKyBkYi5uYW1lICsgJ10nLGVycik7XHJcbn0pO1xyXG5kYi5vbmNlKCdvcGVuJyxmdW5jdGlvbiAoKSB7XHJcbiAgICBjb25zb2xlLmxvZygnU3VjY2Vzc2Z1bGx5IENvbm5lY3RlZCB0byAgWycgKyBkYi5uYW1lICsgJ10nKTtcclxufSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IG1vbmdvb3NlOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "dbConnect.js"
      ],
      "names": [
        "mongodbUri",
        "mongoose",
        "require",
        "connect",
        "useFindAndModify",
        "useNewUrlParser",
        "useUnifiedTopology",
        "db",
        "connection",
        "on",
        "err",
        "console",
        "log",
        "name",
        "once",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,UAAU,GAAG,uGAAjB;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACAD,QAAQ,CAACE,OAAT,CAAiBH,UAAjB,EAA6B;AAAEI,EAAAA,gBAAgB,EAAE,KAApB;AAA2BC,EAAAA,eAAe,EAAE,IAA5C;AAAkDC,EAAAA,kBAAkB,EAAE;AAAtE,CAA7B;AAEA,IAAIC,EAAE,GAAGN,QAAQ,CAACO,UAAlB;AACAD,EAAE,CAACE,EAAH,CAAM,OAAN,EAAc,UAAUC,GAAV,EAAe;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BL,EAAE,CAACM,IAA/B,GAAsC,GAAlD,EAAsDH,GAAtD;AACH,CAFD;AAGAH,EAAE,CAACO,IAAH,CAAQ,MAAR,EAAe,YAAY;AACvBH,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAAiCL,EAAE,CAACM,IAApC,GAA2C,GAAvD;AACH,CAFD;AAIAE,MAAM,CAACC,OAAP,GAAiBf,QAAjB",
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\routes",
      "sourcesContent": [
        "var mongodbUri = 'mongodb+srv://qianwenzhangnancy:zqw123456@wit-qianwenzhang-cluster-yyg37.mongodb.net/taskmanagementdb';\r\nlet mongoose = require('mongoose');\r\nmongoose.connect(mongodbUri, { useFindAndModify: false, useNewUrlParser: true, useUnifiedTopology: true });\r\n\r\nlet db = mongoose.connection;\r\ndb.on('error',function (err) {\r\n    console.log('Unable to Connect to  [' + db.name + ']',err);\r\n});\r\ndb.once('open',function () {\r\n    console.log('Successfully Connected to  [' + db.name + ']');\r\n});\r\n\r\nmodule.exports = mongoose;"
      ]
    },
    "sourceType": "script",
    "mtime": 1572870340994
  },
  "{\"sourceRoot\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\test\\\\functional\\\\api\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"filename\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\test\\\\functional\\\\api\\\\treesTest.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\test\\functional\\api",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\test\\functional\\api\\treesTest.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\test\\functional\\api\\treesTest.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\test\\functional\\api\\treesTest.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\test\\functional\\api",
        "sourceFileName": "treesTest.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _chai = _interopRequireDefault(require(\"chai\"));\n\nvar request = require(\"supertest\");\n\nvar MongoMemoryServer = require(\"mongodb-memory-server\").MongoMemoryServer;\n\nvar User = require(\"../../../models/users\");\n\nvar Tree = require(\"../../../models/trees\");\n\nvar mongoose = require(\"mongoose\");\n\nvar expect = _chai.default.expect;\n\nvar _ = require(\"lodash\");\n\nvar server = require(\"../../../bin/www\");\n\n;\nvar mongod;\ndescribe('Trees', function () {\n  before(function (done) {\n    var username = 'qianwenzhangnancy';\n    var password = 'zqw123456';\n    var mongodburl = 'mongodb+srv://' + username + ':' + password + '@wit-qianwenzhang-cluster-yyg37.mongodb.net/taskmanagementdb';\n    mongoose.connect(mongodburl, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useFindAndModify: false\n    });\n    var db = mongoose.connection;\n    db.on('error', console.error.bind(console, 'connection error'));\n    db.once('open', function () {\n      console.log('Connected to database Successfully!!');\n      done();\n    });\n  });\n  describe('GET /plantList', function () {\n    it('should return all the plants in store', function (done) {\n      request(server).get('/plantList').set(\"Accept\", \"application/json\").expect(\"Content-Type\", /json/).end(function (err, res) {\n        try {\n          expect(res.body).to.be.a(\"array\");\n          expect(res.body.length).to.equal(7);\n\n          var result = _.map(res.body, function (trees) {\n            return {\n              treeName: trees.treeName\n            };\n          });\n\n          expect(result).to.deep.include({\n            treeName: \"Cherry bolossom\"\n          });\n          expect(result).to.deep.include({\n            treeName: \"Rose\"\n          });\n          expect(result).to.deep.include({\n            treeName: \"Lemon Tree\"\n          });\n          expect(result).to.deep.include({\n            treeName: \"Chinese Pine Tree\"\n          });\n          expect(result).to.deep.include({\n            treeName: \"Scarecrow\"\n          });\n          expect(result).to.deep.include({\n            treeName: \"Watermelon\"\n          });\n          expect(result).to.deep.include({\n            treeName: \"testTree\"\n          });\n          done();\n        } catch (e) {\n          done(e);\n        }\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyZWVzVGVzdC5qcyJdLCJuYW1lcyI6WyJyZXF1ZXN0IiwicmVxdWlyZSIsIk1vbmdvTWVtb3J5U2VydmVyIiwiVXNlciIsIlRyZWUiLCJtb25nb29zZSIsImV4cGVjdCIsImNoYWkiLCJfIiwic2VydmVyIiwibW9uZ29kIiwiZGVzY3JpYmUiLCJiZWZvcmUiLCJkb25lIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsIm1vbmdvZGJ1cmwiLCJjb25uZWN0IiwidXNlTmV3VXJsUGFyc2VyIiwidXNlVW5pZmllZFRvcG9sb2d5IiwidXNlRmluZEFuZE1vZGlmeSIsImRiIiwiY29ubmVjdGlvbiIsIm9uIiwiY29uc29sZSIsImVycm9yIiwiYmluZCIsIm9uY2UiLCJsb2ciLCJpdCIsImdldCIsInNldCIsImVuZCIsImVyciIsInJlcyIsImJvZHkiLCJ0byIsImJlIiwiYSIsImxlbmd0aCIsImVxdWFsIiwicmVzdWx0IiwibWFwIiwidHJlZXMiLCJ0cmVlTmFtZSIsImRlZXAiLCJpbmNsdWRlIiwiZSJdLCJtYXBwaW5ncyI6Ijs7OztBQUtBOztBQUxBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsaUJBQWlCLEdBQUdELE9BQU8sQ0FBQyx1QkFBRCxDQUFQLENBQWlDQyxpQkFBM0Q7O0FBQ0EsSUFBTUMsSUFBSSxHQUFHRixPQUFPLENBQUMsdUJBQUQsQ0FBcEI7O0FBQ0EsSUFBTUcsSUFBSSxHQUFHSCxPQUFPLENBQUMsdUJBQUQsQ0FBcEI7O0FBQ0EsSUFBTUksUUFBUSxHQUFHSixPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFFQSxJQUFJSyxNQUFNLEdBQUdDLGNBQUtELE1BQWxCOztBQUNBLElBQU1FLENBQUMsR0FBR1AsT0FBTyxDQUFDLFFBQUQsQ0FBakI7O0FBRUEsSUFBSVEsTUFBTSxHQUFHUixPQUFPLENBQUMsa0JBQUQsQ0FBcEI7O0FBQXlDO0FBQ3pDLElBQUlTLE1BQUo7QUFFQUMsUUFBUSxDQUFDLE9BQUQs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QUFOLENBQWVMLEVBQWYsQ0FBa0JTLElBQWxCLENBQXVCQyxPQUF2QixDQUErQjtBQUFDRixZQUFBQSxRQUFRLEVBQUU7QUFBWCxXQUEvQjtBQUNBdEMsVUFBQUEsTUFBTSxDQUFDbUMsTUFBRCxDQUFOLENBQWVMLEVBQWYsQ0FBa0JTLElBQWxCLENBQXVCQyxPQUF2QixDQUErQjtBQUFDRixZQUFBQSxRQUFRLEVBQUU7QUFBWCxXQUEvQjtBQUVBL0IsVUFBQUEsSUFBSTtBQUNQLFNBaEJELENBZ0JFLE9BQU1rQyxDQUFOLEVBQVE7QUFDTmxDLFVBQUFBLElBQUksQ0FBQ2tDLENBQUQsQ0FBSjtBQUNIO0FBQ0osT0F4Qkw7QUF5QkgsS0ExQkMsQ0FBRjtBQTJCSCxHQTVCTyxDQUFSO0FBNkJILENBM0NPLENBQVIiLCJzb3VyY2VSb290IjoiRDpcXDR0aFllYXJfMXN0U2VtXFxXZWJEZXZlbG9wbWVudFxcdGFza01hbmFnZW1lbnRfUXdaXFx0ZXN0XFxmdW5jdGlvbmFsXFxhcGkiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCByZXF1ZXN0ID0gcmVxdWlyZShcInN1cGVydGVzdFwiKTtcclxuY29uc3QgTW9uZ29NZW1vcnlTZXJ2ZXIgPSByZXF1aXJlKFwibW9uZ29kYi1tZW1vcnktc2VydmVyXCIpLk1vbmdvTWVtb3J5U2VydmVyO1xyXG5jb25zdCBVc2VyID0gcmVxdWlyZShcIi4uLy4uLy4uL21vZGVscy91c2Vyc1wiKTtcclxuY29uc3QgVHJlZSA9IHJlcXVpcmUoXCIuLi8uLi8uLi9tb2RlbHMvdHJlZXNcIik7XHJcbmNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZShcIm1vbmdvb3NlXCIpO1xyXG5pbXBvcnQgY2hhaSBmcm9tICdjaGFpJztcclxudmFyIGV4cGVjdCA9IGNoYWkuZXhwZWN0O1xyXG5jb25zdCBfID0gcmVxdWlyZShcImxvZGFzaFwiKTtcclxuXHJcbmxldCBzZXJ2ZXIgPSByZXF1aXJlKFwiLi4vLi4vLi4vYmluL3d3d1wiKTs7XHJcbmxldCBtb25nb2Q7XHJcblxyXG5kZXNjcmliZSgnVHJlZXMnLCAoKT0+IHtcclxuICAgIGJlZm9yZShmdW5jdGlvbiAoZG9uZSkge1xyXG4gICAgICAgIGxldCB1c2VybmFtZSA9ICdxaWFud2VuemhhbmduYW5jeSc7XHJcbiAgICAgICAgbGV0IHBhc3N3b3JkID0gJ3pxdzEyMzQ1Nic7XHJcbiAgICAgICAgbGV0IG1vbmdvZGJ1cmwgPSAnbW9uZ29kYitzcnY6Ly8nICsgdXNlcm5hbWUgKyAnOicgKyBwYXNzd29yZCArICdAd2l0LXFpYW53ZW56aGFuZy1jbHVzdGVyLXl5ZzM3Lm1vbmdvZGIubmV0L3Rhc2ttYW5hZ2VtZW50ZGInO1xyXG4gICAgICAgIG1vbmdvb3NlLmNvbm5lY3QobW9uZ29kYnVybCwge3VzZU5ld1VybFBhcnNlcjogdHJ1ZSwgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlLCB1c2VGaW5kQW5kTW9kaWZ5OiBmYWxzZX0pO1xyXG5cclxuICAgICAgICBsZXQgZGIgPSBtb25nb29zZS5jb25uZWN0aW9uO1xyXG4gICAgICAgIGRiLm9uKCdlcnJvcicsIGNvbnNvbGUuZXJyb3IuYmluZChjb25zb2xlLCAnY29ubmVjdGlvbiBlcnJvcicpKTtcclxuICAgICAgICBkYi5vbmNlKCdvcGVuJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnQ29ubmVjdGVkIHRvIGRhdGFiYXNlIFN1Y2Nlc3NmdWxseSEhJyk7XHJcbiAgICAgICAgICAgIGRvbmUoKTtcclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG4gICAgZGVzY3JpYmUoJ0dFVCAvcGxhbnRMaXN0JywgICgpID0+IHtcclxuICAgICAgICBpdCgnc2hvdWxkIHJldHVybiBhbGwgdGhlIHBsYW50cyBpbiBzdG9yZScsIGRvbmUgPT4ge1xyXG4gICAgICAgICAgICByZXF1ZXN0KHNlcnZlcilcclxuICAgICAgICAgICAgICAgIC5nZXQoJy9wbGFudExpc3QnKVxyXG4gICAgICAgICAgICAgICAgLnNldChcIkFjY2VwdFwiLCBcImFwcGxpY2F0aW9uL2pzb25cIilcclxuICAgICAgICAgICAgICAgIC5leHBlY3QoXCJDb250ZW50LVR5cGVcIiwgL2pzb24vKVxyXG4gICAgICAgICAgICAgICAgLmVuZCgoZXJyLCByZXMpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBleHBlY3QocmVzLmJvZHkpLnRvLmJlLmEoXCJhcnJheVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXhwZWN0KHJlcy5ib2R5Lmxlbmd0aCkudG8uZXF1YWwoNyk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgcmVzdWx0ID0gXy5tYXAocmVzLmJvZHksIHRyZWVzID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7dHJlZU5hbWU6IHRyZWVzLnRyZWVOYW1lfTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4cGVjdChyZXN1bHQpLnRvLmRlZXAuaW5jbHVkZSh7dHJlZU5hbWU6IFwiQ2hlcnJ5IGJvbG9zc29tXCJ9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXhwZWN0KHJlc3VsdCkudG8uZGVlcC5pbmNsdWRlKHt0cmVlTmFtZTogXCJSb3NlXCJ9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXhwZWN0KHJlc3VsdCkudG8uZGVlcC5pbmNsdWRlKHt0cmVlTmFtZTogXCJMZW1vbiBUcmVlXCJ9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXhwZWN0KHJlc3VsdCkudG8uZGVlcC5pbmNsdWRlKHt0cmVlTmFtZTogXCJDaGluZXNlIFBpbmUgVHJlZVwifSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4cGVjdChyZXN1bHQpLnRvLmRlZXAuaW5jbHVkZSh7dHJlZU5hbWU6IFwiU2NhcmVjcm93XCJ9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXhwZWN0KHJlc3VsdCkudG8uZGVlcC5pbmNsdWRlKHt0cmVlTmFtZTogXCJXYXRlcm1lbG9uXCJ9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXhwZWN0KHJlc3VsdCkudG8uZGVlcC5pbmNsdWRlKHt0cmVlTmFtZTogXCJ0ZXN0VHJlZVwifSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkb25lKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaChlKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZG9uZShlKVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn0pIl19",
    "map": {
      "version": 3,
      "sources": [
        "treesTest.js"
      ],
      "names": [
        "request",
        "require",
        "MongoMemoryServer",
        "User",
        "Tree",
        "mongoose",
        "expect",
        "chai",
        "_",
        "server",
        "mongod",
        "describe",
        "before",
        "done",
        "username",
        "password",
        "mongodburl",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "useFindAndModify",
        "db",
        "connection",
        "on",
        "console",
        "error",
        "bind",
        "once",
        "log",
        "it",
        "get",
        "set",
        "end",
        "err",
        "res",
        "body",
        "to",
        "be",
        "a",
        "length",
        "equal",
        "result",
        "map",
        "trees",
        "treeName",
        "deep",
        "include",
        "e"
      ],
      "mappings": ";;;;AAKA;;AALA,IAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,uBAAD,CAAP,CAAiCC,iBAA3D;;AACA,IAAMC,IAAI,GAAGF,OAAO,CAAC,uBAAD,CAApB;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,uBAAD,CAApB;;AACA,IAAMI,QAAQ,GAAGJ,OAAO,CAAC,UAAD,CAAxB;;AAEA,IAAIK,MAAM,GAAGC,cAAKD,MAAlB;;AACA,IAAME,CAAC,GAAGP,OAAO,CAAC,QAAD,CAAjB;;AAEA,IAAIQ,MAAM,GAAGR,OAAO,CAAC,kBAAD,CAApB;;AAAyC;AACzC,IAAIS,MAAJ;AAEAC,QAAQ,CAAC,OAAD,EAAU,YAAK;AACnBC,EAAAA,MAAM,CAAC,UAAUC,IAAV,EAAgB;AACnB,QAAIC,QAAQ,GAAG,mBAAf;AACA,QAAIC,QAAQ,GAAG,WAAf;AACA,QAAIC,UAAU,GAAG,mBAAmBF,QAAnB,GAA8B,GAA9B,GAAoCC,QAApC,GAA+C,8DAAhE;AACAV,IAAAA,QAAQ,CAACY,OAAT,CAAiBD,UAAjB,EAA6B;AAACE,MAAAA,eAAe,EAAE,IAAlB;AAAwBC,MAAAA,kBAAkB,EAAE,IAA5C;AAAkDC,MAAAA,gBAAgB,EAAE;AAApE,KAA7B;AAEA,QAAIC,EAAE,GAAGhB,QAAQ,CAACiB,UAAlB;AACAD,IAAAA,EAAE,CAACE,EAAH,CAAM,OAAN,EAAeC,OAAO,CAACC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,EAA4B,kBAA5B,CAAf;AACAH,IAAAA,EAAE,CAACM,IAAH,CAAQ,MAAR,EAAgB,YAAY;AACxBH,MAAAA,OAAO,CAACI,GAAR,CAAY,sCAAZ;AACAf,MAAAA,IAAI;AACP,KAHD;AAIH,GAZK,CAAN;AAaAF,EAAAA,QAAQ,CAAC,gBAAD,EAAoB,YAAM;AAC9BkB,IAAAA,EAAE,CAAC,uCAAD,EAA0C,UAAAhB,IAAI,EAAI;AAChDb,MAAAA,OAAO,CAACS,MAAD,CAAP,CACKqB,GADL,CACS,YADT,EAEKC,GAFL,CAES,QAFT,EAEmB,kBAFnB,EAGKzB,MAHL,CAGY,cAHZ,EAG4B,MAH5B,EAIK0B,GAJL,CAIS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACf,YAAI;AACA5B,UAAAA,MAAM,CAAC4B,GAAG,CAACC,IAAL,CAAN,CAAiBC,EAAjB,CAAoBC,EAApB,CAAuBC,CAAvB,CAAyB,OAAzB;AACAhC,UAAAA,MAAM,CAAC4B,GAAG,CAACC,IAAJ,CAASI,MAAV,CAAN,CAAwBH,EAAxB,CAA2BI,KAA3B,CAAiC,CAAjC;;AAEA,cAAIC,MAAM,GAAGjC,CAAC,CAACkC,GAAF,CAAMR,GAAG,CAACC,IAAV,EAAgB,UAAAQ,KAAK,EAAI;AAClC,mBAAO;AAACC,cAAAA,QAAQ,EAAED,KAAK,CAACC;AAAjB,aAAP;AACH,WAFY,CAAb;;AAGAtC,UAAAA,MAAM,CAACmC,MAAD,CAAN,CAAeL,EAAf,CAAkBS,IAAlB,CAAuBC,OAAvB,CAA+B;AAACF,YAAAA,QAAQ,EAAE;AAAX,WAA/B;AACAtC,UAAAA,MAAM,CAACmC,MAAD,CAAN,CAAeL,EAAf,CAAkBS,IAAlB,CAAuBC,OAAvB,CAA+B;AAACF,YAAAA,QAAQ,EAAE;AAAX,WAA/B;AACAtC,UAAAA,MAAM,CAACmC,MAAD,CAAN,CAAeL,EAAf,CAAkBS,IAAlB,CAAuBC,OAAvB,CAA+B;AAACF,YAAAA,QAAQ,EAAE;AAAX,WAA/B;AACAtC,UAAAA,MAAM,CAACmC,MAAD,CAAN,CAAeL,EAAf,CAAkBS,IAAlB,CAAuBC,OAAvB,CAA+B;AAACF,YAAAA,QAAQ,EAAE;AAAX,WAA/B;AACAtC,UAAAA,MAAM,CAACmC,MAAD,CAAN,CAAeL,EAAf,CAAkBS,IAAlB,CAAuBC,OAAvB,CAA+B;AAACF,YAAAA,QAAQ,EAAE;AAAX,WAA/B;AACAtC,UAAAA,MAAM,CAACmC,MAAD,CAAN,CAAeL,EAAf,CAAkBS,IAAlB,CAAuBC,OAAvB,CAA+B;AAACF,YAAAA,QAAQ,EAAE;AAAX,WAA/B;AACAtC,UAAAA,MAAM,CAACmC,MAAD,CAAN,CAAeL,EAAf,CAAkBS,IAAlB,CAAuBC,OAAvB,CAA+B;AAACF,YAAAA,QAAQ,EAAE;AAAX,WAA/B;AAEA/B,UAAAA,IAAI;AACP,SAhBD,CAgBE,OAAMkC,CAAN,EAAQ;AACNlC,UAAAA,IAAI,CAACkC,CAAD,CAAJ;AACH;AACJ,OAxBL;AAyBH,KA1BC,CAAF;AA2BH,GA5BO,CAAR;AA6BH,CA3CO,CAAR",
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\test\\functional\\api",
      "sourcesContent": [
        "const request = require(\"supertest\");\r\nconst MongoMemoryServer = require(\"mongodb-memory-server\").MongoMemoryServer;\r\nconst User = require(\"../../../models/users\");\r\nconst Tree = require(\"../../../models/trees\");\r\nconst mongoose = require(\"mongoose\");\r\nimport chai from 'chai';\r\nvar expect = chai.expect;\r\nconst _ = require(\"lodash\");\r\n\r\nlet server = require(\"../../../bin/www\");;\r\nlet mongod;\r\n\r\ndescribe('Trees', ()=> {\r\n    before(function (done) {\r\n        let username = 'qianwenzhangnancy';\r\n        let password = 'zqw123456';\r\n        let mongodburl = 'mongodb+srv://' + username + ':' + password + '@wit-qianwenzhang-cluster-yyg37.mongodb.net/taskmanagementdb';\r\n        mongoose.connect(mongodburl, {useNewUrlParser: true, useUnifiedTopology: true, useFindAndModify: false});\r\n\r\n        let db = mongoose.connection;\r\n        db.on('error', console.error.bind(console, 'connection error'));\r\n        db.once('open', function () {\r\n            console.log('Connected to database Successfully!!');\r\n            done();\r\n        });\r\n    });\r\n    describe('GET /plantList',  () => {\r\n        it('should return all the plants in store', done => {\r\n            request(server)\r\n                .get('/plantList')\r\n                .set(\"Accept\", \"application/json\")\r\n                .expect(\"Content-Type\", /json/)\r\n                .end((err, res) => {\r\n                    try {\r\n                        expect(res.body).to.be.a(\"array\");\r\n                        expect(res.body.length).to.equal(7);\r\n\r\n                        let result = _.map(res.body, trees => {\r\n                            return {treeName: trees.treeName};\r\n                        });\r\n                        expect(result).to.deep.include({treeName: \"Cherry bolossom\"});\r\n                        expect(result).to.deep.include({treeName: \"Rose\"});\r\n                        expect(result).to.deep.include({treeName: \"Lemon Tree\"});\r\n                        expect(result).to.deep.include({treeName: \"Chinese Pine Tree\"});\r\n                        expect(result).to.deep.include({treeName: \"Scarecrow\"});\r\n                        expect(result).to.deep.include({treeName: \"Watermelon\"});\r\n                        expect(result).to.deep.include({treeName: \"testTree\"});\r\n\r\n                        done();\r\n                    } catch(e){\r\n                        done(e)\r\n                    }\r\n                });\r\n        });\r\n    });\r\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1572927680497
  },
  "{\"sourceRoot\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\test\\\\functional\\\\api\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"filename\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\\\\test\\\\functional\\\\api\\\\tagsTest.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"D:\\\\4thYear_1stSem\\\\WebDevelopment\\\\taskManagement_QwZ\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\test\\functional\\api",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\test\\functional\\api\\tagsTest.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\test\\functional\\api\\tagsTest.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\test\\functional\\api\\tagsTest.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\test\\functional\\api",
        "sourceFileName": "tagsTest.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _chai = _interopRequireDefault(require(\"chai\"));\n\nvar request = require(\"supertest\");\n\nvar MongoMemoryServer = require(\"mongodb-memory-server\").MongoMemoryServer;\n\nvar User = require(\"../../../models/users\");\n\nvar Tree = require(\"../../../models/trees\");\n\nvar mongoose = require(\"mongoose\");\n\nvar expect = _chai.default.expect;\n\nvar _ = require(\"lodash\");\n\nvar server = require(\"../../../bin/www\");\n\n;\nvar mongod;\ndescribe('Trees', function () {\n  before(function (done) {\n    var username = 'qianwenzhangnancy';\n    var password = 'zqw123456';\n    var mongodburl = 'mongodb+srv://' + username + ':' + password + '@wit-qianwenzhang-cluster-yyg37.mongodb.net/taskmanagementdb';\n    mongoose.connect(mongodburl, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useFindAndModify: false\n    });\n    var db = mongoose.connection;\n    db.on('error', console.error.bind(console, 'connection error'));\n    db.once('open', function () {\n      console.log('Connected to database Successfully!!');\n      done();\n    });\n  });\n  describe.only('POST /tagCreation', function () {\n    describe('when user creates an tag', function () {\n      it('should return message about creation is successful or not ', function () {\n        var tag = {\n          tagType: \"Socialize\",\n          tagColor: \"yellow\",\n          tagDescription: \"spend time with families\"\n        };\n        return request(server).post(\"/tagCreation\").send(tag).expect(200).then(function (res) {\n          expect({\n            message: 'Tag edited!'\n          });\n        });\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhZ3NUZXN0LmpzIl0sIm5hbWVzIjpbInJlcXVlc3QiLCJyZXF1aXJlIiwiTW9uZ29NZW1vcnlTZXJ2ZXIiLCJVc2VyIiwiVHJlZSIsIm1vbmdvb3NlIiwiZXhwZWN0IiwiY2hhaSIsIl8iLCJzZXJ2ZXIiLCJtb25nb2QiLCJkZXNjcmliZSIsImJlZm9yZSIsImRvbmUiLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwibW9uZ29kYnVybCIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJ1c2VGaW5kQW5kTW9kaWZ5IiwiZGIiLCJjb25uZWN0aW9uIiwib24iLCJjb25zb2xlIiwiZXJyb3IiLCJiaW5kIiwib25jZSIsImxvZyIsIm9ubHkiLCJpdCIsInRhZyIsInRhZ1R5cGUiLCJ0YWdDb2xvciIsInRhZ0Rlc2NyaXB0aW9uIiwicG9zdCIsInNlbmQiLCJ0aGVuIiwicmVzIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7OztBQUtBOztBQUxBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsaUJBQWlCLEdBQUdELE9BQU8sQ0FBQyx1QkFBRCxDQUFQLENBQWlDQyxpQkFBM0Q7O0FBQ0EsSUFBTUMsSUFBSSxHQUFHRixPQUFPLENBQUMsdUJBQUQsQ0FBcEI7O0FBQ0EsSUFBTUcsSUFBSSxHQUFHSCxPQUFPLENBQUMsdUJBQUQsQ0FBcEI7O0FBQ0EsSUFBTUksUUFBUSxHQUFHSixPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFFQSxJQUFJSyxNQUFNLEdBQUdDLGNBQUtELE1BQWxCOztBQUNBLElBQU1FLENBQUMsR0FBR1AsT0FBTyxDQUFDLFFBQUQsQ0FBakI7O0FBRUEsSUFBSVEsTUFBTSxHQUFHUixPQUFPLENBQUMsa0JBQUQsQ0FBcEI7O0FBQXlDO0FBQ3pDLElBQUlTLE1BQUo7QUFFQUMsUUFBUSxDQUFDLE9BQUQsRUFBVSxZQUFLO0FBQ25CQyxFQUFBQSxNQUFNLENBQUMsVUFBVUMsSUFBVixFQUFnQjtBQUNuQixRQUFJQyxRQUFRLEdBQUcsbUJBQWY7QUFDQSxRQUFJQyxRQUFRLEdBQUcsV0FBZjtBQUNBLFFBQUlDLFVBQVUsR0FBRyxtQkFBbUJGLFFBQW5CLEdBQThCLEdBQTlCLEdBQW9DQyxRQUFwQyxHQUErQyw4REFBaEU7QUFDQVYsSUFBQUEsUUFBUSxDQUFDWSxPQUFULENBQWlCRCxVQUFqQixFQUE2QjtBQUFDRSxNQUFBQSxlQUFlLEVBQUUsSUFBbEI7QUFBd0JDLE1BQUFBLGtCQUFrQixFQUFFLElBQTVDO0FBQWtEQyxNQUFBQSxnQkFBZ0IsRUFBRTtBQUFwRSxLQUE3QjtBQUVBLFFBQUlDLEVBQUUsR0FBR2hCLFFBQVEsQ0FBQ2lCLFVBQWxCO0FBQ0FELElBQUFBLEVBQUUsQ0FBQ0UsRUFBSCxDQUFNLE9BQU4sRUFBZUMsT0FBTyxDQUFDQyxLQUFSLENBQWNDLElBQWQsQ0FBbUJGLE9BQW5CLEVBQTRCLGtCQUE1QixDQUFmO0FBQ0FILElBQUFBLEVBQUUsQ0FBQ00sSUFBSCxDQUFRLE1BQVIsRUFBZ0IsWUFBWTtBQUN4QkgsTUFBQUEsT0FBTyxDQUFDSSxHQUFSLENBQVksc0NBQVo7QUFDQWYsTUFBQUEsSUFBSTtBQUNQLEtBSEQ7QUFJSCxHQVpLLENBQU47QUFjQUYsRUFBQUEsUUFBUSxDQUFDa0IsSUFBVCxDQUFjLG1CQUFkLEVBQW1DLFlBQU07QUFDckNsQixJQUFBQSxRQUFRLENBQUMsMEJBQUQsRUFBNkIsWUFBTTtBQUN2Q21CLE1BQUFBLEVBQUUsQ0FBQyw0REFBRCxFQUErRCxZQUFNO0FBQ25FLFlBQU1DLEdBQUcsR0FBRztBQUNSQyxVQUFBQSxPQUFPLEVBQUUsV0FERDtBQUVSQyxVQUFBQSxRQUFRLEVBQUUsUUFGRjtBQUdSQyxVQUFBQSxjQUFjLEVBQUM7QUFIUCxTQUFaO0FBS0EsZUFBT2xDLE9BQU8sQ0FBQ1MsTUFBRCxDQUFQLENBQ0YwQixJQURFLENBQ0csY0FESCxFQUVGQyxJQUZFLENBRUdMLEdBRkgsRUFHRnpCLE1BSEUsQ0FHSyxHQUhMLEVBSUYrQixJQUpFLENBSUcsVUFBQUMsR0FBRyxFQUFJO0FBQ1RoQyxVQUFBQSxNQUFNLENBQUM7QUFBQ2lDLFlBQUFBLE9BQU8sRUFBRTtBQUFWLFdBQUQsQ0FBTjtBQUNILFNBTkUsQ0FBUDtBQU9ILE9BYkMsQ0FBRjtBQWVILEtBaEJPLENBQVI7QUFrQkgsR0FuQkQ7QUFvQkgsQ0FuQ08sQ0FBUiIsInNvdXJjZVJvb3QiOiJEOlxcNHRoWWVhcl8xc3RTZW1cXFdlYkRldmVsb3BtZW50XFx0YXNrTWFuYWdlbWVudF9Rd1pcXHRlc3RcXGZ1bmN0aW9uYWxcXGFwaSIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJlcXVlc3QgPSByZXF1aXJlKFwic3VwZXJ0ZXN0XCIpO1xyXG5jb25zdCBNb25nb01lbW9yeVNlcnZlciA9IHJlcXVpcmUoXCJtb25nb2RiLW1lbW9yeS1zZXJ2ZXJcIikuTW9uZ29NZW1vcnlTZXJ2ZXI7XHJcbmNvbnN0IFVzZXIgPSByZXF1aXJlKFwiLi4vLi4vLi4vbW9kZWxzL3VzZXJzXCIpO1xyXG5jb25zdCBUcmVlID0gcmVxdWlyZShcIi4uLy4uLy4uL21vZGVscy90cmVlc1wiKTtcclxuY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKFwibW9uZ29vc2VcIik7XHJcbmltcG9ydCBjaGFpIGZyb20gJ2NoYWknO1xyXG52YXIgZXhwZWN0ID0gY2hhaS5leHBlY3Q7XHJcbmNvbnN0IF8gPSByZXF1aXJlKFwibG9kYXNoXCIpO1xyXG5cclxubGV0IHNlcnZlciA9IHJlcXVpcmUoXCIuLi8uLi8uLi9iaW4vd3d3XCIpOztcclxubGV0IG1vbmdvZDtcclxuXHJcbmRlc2NyaWJlKCdUcmVlcycsICgpPT4ge1xyXG4gICAgYmVmb3JlKGZ1bmN0aW9uIChkb25lKSB7XHJcbiAgICAgICAgbGV0IHVzZXJuYW1lID0gJ3FpYW53ZW56aGFuZ25hbmN5JztcclxuICAgICAgICBsZXQgcGFzc3dvcmQgPSAnenF3MTIzNDU2JztcclxuICAgICAgICBsZXQgbW9uZ29kYnVybCA9ICdtb25nb2RiK3NydjovLycgKyB1c2VybmFtZSArICc6JyArIHBhc3N3b3JkICsgJ0B3aXQtcWlhbndlbnpoYW5nLWNsdXN0ZXIteXlnMzcubW9uZ29kYi5uZXQvdGFza21hbmFnZW1lbnRkYic7XHJcbiAgICAgICAgbW9uZ29vc2UuY29ubmVjdChtb25nb2RidXJsLCB7dXNlTmV3VXJsUGFyc2VyOiB0cnVlLCB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWUsIHVzZUZpbmRBbmRNb2RpZnk6IGZhbHNlfSk7XHJcblxyXG4gICAgICAgIGxldCBkYiA9IG1vbmdvb3NlLmNvbm5lY3Rpb247XHJcbiAgICAgICAgZGIub24oJ2Vycm9yJywgY29uc29sZS5lcnJvci5iaW5kKGNvbnNvbGUsICdjb25uZWN0aW9uIGVycm9yJykpO1xyXG4gICAgICAgIGRiLm9uY2UoJ29wZW4nLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdDb25uZWN0ZWQgdG8gZGF0YWJhc2UgU3VjY2Vzc2Z1bGx5ISEnKTtcclxuICAgICAgICAgICAgZG9uZSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgZGVzY3JpYmUub25seSgnUE9TVCAvdGFnQ3JlYXRpb24nLCAoKSA9PiB7XHJcbiAgICAgICAgZGVzY3JpYmUoJ3doZW4gdXNlciBjcmVhdGVzIGFuIHRhZycsICgpID0+IHtcclxuICAgICAgICAgICAgaXQoJ3Nob3VsZCByZXR1cm4gbWVzc2FnZSBhYm91dCBjcmVhdGlvbiBpcyBzdWNjZXNzZnVsIG9yIG5vdCAnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB0YWcgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGFnVHlwZTogXCJTb2NpYWxpemVcIixcclxuICAgICAgICAgICAgICAgICAgICB0YWdDb2xvcjogXCJ5ZWxsb3dcIixcclxuICAgICAgICAgICAgICAgICAgICB0YWdEZXNjcmlwdGlvbjpcInNwZW5kIHRpbWUgd2l0aCBmYW1pbGllc1wiXHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcXVlc3Qoc2VydmVyKVxyXG4gICAgICAgICAgICAgICAgICAgIC5wb3N0KFwiL3RhZ0NyZWF0aW9uXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgLnNlbmQodGFnKVxyXG4gICAgICAgICAgICAgICAgICAgIC5leHBlY3QoMjAwKVxyXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKHJlcyA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4cGVjdCh7bWVzc2FnZTogJ1RhZyBlZGl0ZWQhJ30pO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICB9KVxyXG5cclxuICAgIH0pXHJcbn0pIl19",
    "map": {
      "version": 3,
      "sources": [
        "tagsTest.js"
      ],
      "names": [
        "request",
        "require",
        "MongoMemoryServer",
        "User",
        "Tree",
        "mongoose",
        "expect",
        "chai",
        "_",
        "server",
        "mongod",
        "describe",
        "before",
        "done",
        "username",
        "password",
        "mongodburl",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "useFindAndModify",
        "db",
        "connection",
        "on",
        "console",
        "error",
        "bind",
        "once",
        "log",
        "only",
        "it",
        "tag",
        "tagType",
        "tagColor",
        "tagDescription",
        "post",
        "send",
        "then",
        "res",
        "message"
      ],
      "mappings": ";;;;AAKA;;AALA,IAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,uBAAD,CAAP,CAAiCC,iBAA3D;;AACA,IAAMC,IAAI,GAAGF,OAAO,CAAC,uBAAD,CAApB;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,uBAAD,CAApB;;AACA,IAAMI,QAAQ,GAAGJ,OAAO,CAAC,UAAD,CAAxB;;AAEA,IAAIK,MAAM,GAAGC,cAAKD,MAAlB;;AACA,IAAME,CAAC,GAAGP,OAAO,CAAC,QAAD,CAAjB;;AAEA,IAAIQ,MAAM,GAAGR,OAAO,CAAC,kBAAD,CAApB;;AAAyC;AACzC,IAAIS,MAAJ;AAEAC,QAAQ,CAAC,OAAD,EAAU,YAAK;AACnBC,EAAAA,MAAM,CAAC,UAAUC,IAAV,EAAgB;AACnB,QAAIC,QAAQ,GAAG,mBAAf;AACA,QAAIC,QAAQ,GAAG,WAAf;AACA,QAAIC,UAAU,GAAG,mBAAmBF,QAAnB,GAA8B,GAA9B,GAAoCC,QAApC,GAA+C,8DAAhE;AACAV,IAAAA,QAAQ,CAACY,OAAT,CAAiBD,UAAjB,EAA6B;AAACE,MAAAA,eAAe,EAAE,IAAlB;AAAwBC,MAAAA,kBAAkB,EAAE,IAA5C;AAAkDC,MAAAA,gBAAgB,EAAE;AAApE,KAA7B;AAEA,QAAIC,EAAE,GAAGhB,QAAQ,CAACiB,UAAlB;AACAD,IAAAA,EAAE,CAACE,EAAH,CAAM,OAAN,EAAeC,OAAO,CAACC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,EAA4B,kBAA5B,CAAf;AACAH,IAAAA,EAAE,CAACM,IAAH,CAAQ,MAAR,EAAgB,YAAY;AACxBH,MAAAA,OAAO,CAACI,GAAR,CAAY,sCAAZ;AACAf,MAAAA,IAAI;AACP,KAHD;AAIH,GAZK,CAAN;AAcAF,EAAAA,QAAQ,CAACkB,IAAT,CAAc,mBAAd,EAAmC,YAAM;AACrClB,IAAAA,QAAQ,CAAC,0BAAD,EAA6B,YAAM;AACvCmB,MAAAA,EAAE,CAAC,4DAAD,EAA+D,YAAM;AACnE,YAAMC,GAAG,GAAG;AACRC,UAAAA,OAAO,EAAE,WADD;AAERC,UAAAA,QAAQ,EAAE,QAFF;AAGRC,UAAAA,cAAc,EAAC;AAHP,SAAZ;AAKA,eAAOlC,OAAO,CAACS,MAAD,CAAP,CACF0B,IADE,CACG,cADH,EAEFC,IAFE,CAEGL,GAFH,EAGFzB,MAHE,CAGK,GAHL,EAIF+B,IAJE,CAIG,UAAAC,GAAG,EAAI;AACThC,UAAAA,MAAM,CAAC;AAACiC,YAAAA,OAAO,EAAE;AAAV,WAAD,CAAN;AACH,SANE,CAAP;AAOH,OAbC,CAAF;AAeH,KAhBO,CAAR;AAkBH,GAnBD;AAoBH,CAnCO,CAAR",
      "sourceRoot": "D:\\4thYear_1stSem\\WebDevelopment\\taskManagement_QwZ\\test\\functional\\api",
      "sourcesContent": [
        "const request = require(\"supertest\");\r\nconst MongoMemoryServer = require(\"mongodb-memory-server\").MongoMemoryServer;\r\nconst User = require(\"../../../models/users\");\r\nconst Tree = require(\"../../../models/trees\");\r\nconst mongoose = require(\"mongoose\");\r\nimport chai from 'chai';\r\nvar expect = chai.expect;\r\nconst _ = require(\"lodash\");\r\n\r\nlet server = require(\"../../../bin/www\");;\r\nlet mongod;\r\n\r\ndescribe('Trees', ()=> {\r\n    before(function (done) {\r\n        let username = 'qianwenzhangnancy';\r\n        let password = 'zqw123456';\r\n        let mongodburl = 'mongodb+srv://' + username + ':' + password + '@wit-qianwenzhang-cluster-yyg37.mongodb.net/taskmanagementdb';\r\n        mongoose.connect(mongodburl, {useNewUrlParser: true, useUnifiedTopology: true, useFindAndModify: false});\r\n\r\n        let db = mongoose.connection;\r\n        db.on('error', console.error.bind(console, 'connection error'));\r\n        db.once('open', function () {\r\n            console.log('Connected to database Successfully!!');\r\n            done();\r\n        });\r\n    });\r\n\r\n    describe.only('POST /tagCreation', () => {\r\n        describe('when user creates an tag', () => {\r\n            it('should return message about creation is successful or not ', () => {\r\n                const tag = {\r\n                    tagType: \"Socialize\",\r\n                    tagColor: \"yellow\",\r\n                    tagDescription:\"spend time with families\"\r\n                };\r\n                return request(server)\r\n                    .post(\"/tagCreation\")\r\n                    .send(tag)\r\n                    .expect(200)\r\n                    .then(res => {\r\n                        expect({message: 'Tag edited!'});\r\n                    })\r\n            });\r\n\r\n        })\r\n\r\n    })\r\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1572932454444
  }
}